{"version":3,"sources":["reducers/index.js"],"names":["define","redux","items","groups","choices","general","utils","appReducer","combineReducers","passedState","action","state","type","undefined","cloneObject"],"mappings":";;;;;;;AAAAA,QACI,gBACA,UACA,WACA,YACA,YACA,gBACD,SAAUC,EAAOC,EAAOC,EAAQC,EAASC,EAASC,GACjD,aACA,MAAMC,EAAaN,EAAMO,iBACrBN,MAAAA,EACAC,OAAAA,EACAC,QAAAA,EACAC,QAAAA,IAWJ,MAToB,CAACI,EAAaC,KAC9B,IAAIC,EAAQF,EACZ,GAAoB,cAAhBC,EAAOE,KACPD,OAAQE,OACL,GAAoB,aAAhBH,EAAOE,KACd,OAAON,EAAMQ,YAAYJ,EAAOC,OAEpC,OAAOJ,EAAWI,EAAOD","file":"../../reducers/index.js","sourcesContent":["define([\n    'skylark-redux',\n    './items',\n    './groups',\n    './choices',\n    './general',\n    '../lib/utils'\n], function (redux, items, groups, choices, general, utils) {\n    'use strict';\n    const appReducer = redux.combineReducers({\n        items,\n        groups,\n        choices,\n        general\n    });\n    const rootReducer = (passedState, action) => {\n        let state = passedState;\n        if (action.type === 'CLEAR_ALL') {\n            state = undefined;\n        } else if (action.type === 'RESET_TO') {\n            return utils.cloneObject(action.state);\n        }\n        return appReducer(state, action);\n    };\n    return rootReducer;\n});"]}
{"version":3,"sources":["choices.js"],"names":["define","Fuse","merge","Store","components","constants","TEMPLATES","actionsChoices","actionsItems","groups","misc","h","IS_IE11","document","documentElement","style","USER_DEFAULTS","Choices","defaults","Object","preventExtensions","options","templates","[object Object]","element","userConfig","this","config","all","DEFAULT_CONFIG","arrayMerge","_","sourceArray","invalidConfigOptions","diff","length","console","warn","join","passedElement","querySelector","HTMLInputElement","HTMLSelectElement","TypeError","_isTextElement","type","TEXT_TYPE","_isSelectOneElement","SELECT_ONE_TYPE","_isSelectMultipleElement","SELECT_MULTIPLE_TYPE","_isSelectElement","searchEnabled","includes","renderSelectedChoices","addItemFilter","re","RegExp","test","bind","WrappedInput","classNames","delimiter","WrappedSelect","template","data","_templates","option","initialised","_store","_initialState","_currentState","_prevState","_currentValue","_canSearch","_isScrollingOnIe","_highlightPosition","_wasTap","_placeholderValue","_generatePlaceholderValue","_baseId","generateId","_direction","dir","direction","elementDirection","window","getComputedStyle","documentDirection","_idNames","itemChoice","_presetGroups","optionGroups","_presetOptions","_presetChoices","choices","_presetItems","items","value","concat","split","forEach","o","push","label","innerHTML","selected","disabled","parentNode","placeholder","hasAttribute","customProperties","getAttribute","_render","_onFocus","_onBlur","_onKeyUp","_onKeyDown","_onClick","_onTouchMove","_onTouchEnd","_onMouseDown","_onMouseOver","_onFormReset","_onAKey","_onEnterKey","_onEscapeKey","_onDirectionKey","_onDeleteKey","isActive","silent","init","_createTemplates","_createElements","_createStructure","cloneObject","state","subscribe","_addEventListeners","addItems","disable","callbackOnInit","call","_removeEventListeners","reveal","containerOuter","unwrap","clearStore","isDisabled","enable","input","item","runEvent","id","groupId","group","getGroupById","dispatch","highlightItem","triggerEvent","EVENTS","groupValue","unhighlightItem","activeItems","filter","_removeItem","excludedId","highlightedActiveItems","_triggerChange","preventInputFocus","dropdown","requestAnimationFrame","show","open","distanceFromTopWindow","focus","showDropdown","preventInputBlur","hide","close","removeActiveDescendant","blur","hideDropdown","valueOnly","values","reduce","selectedItems","itemValue","_setChoiceOrItem","Array","isArray","val","_findAndSelectChoiceByValue","choicesArrayOrFetcher","replaceChoices","ReferenceError","clearChoices","fetcher","Promise","resolve","then","_handleLoadingState","setChoices","catch","err","error","removeLoadingState","_startLoading","groupOrChoice","_addGroup","parseInt","valueKey","labelKey","_addChoice","isSelected","_stopLoading","clearAll","shouldSetInputWidth","clear","_isSearching","d","activateChoices","isLoading","stateChanged","shouldRenderChoices","shouldRenderItems","_renderChoices","_renderItems","activeGroups","activeChoices","choiceListFragment","createDocumentFragment","choiceList","resetScrollPosition","scrollToTop","activePlaceholders","activeChoice","_createChoicesFragment","_createGroupsFragment","childNodes","canAddItem","_canAddItem","response","append","_highlightChoice","_getTemplate","notice","dropdownItem","noResultsText","noChoicesText","itemList","itemListFragment","_createItemsFragment","fragment","getGroupChoices","choice","shouldSort","sort","sorter","groupChoices","dropdownGroup","appendChild","withinGroup","searchResultLimit","renderChoiceLimit","sortByScore","appendChoice","itemSelectText","rendererableChoices","placeholderChoices","normalChoices","acc","choiceLimit","sortedChoices","i","shouldSortItems","removeItemButton","listItem","undefined","change","placeholderChoice","_addItem","choiceId","removeItems","itemId","itemToRemove","find","_selectPlaceholderChoice","hasShiftKey","passedId","highlighted","dataset","getChoiceById","passedKeyCode","keyCode","hasActiveDropdown","clearInput","lastItem","hasHighlightedItems","some","editItems","setWidth","removeHighlightedItems","setIsLoading","setLoading","placeholderItem","getChild","addLoadingState","loadingText","isFocussed","searchFloor","searchChoices","hasUnactiveChoices","active","resultCount","_searchChoices","search","addItemText","isDuplicateValue","existsInArray","maxItemCount","maxItemText","duplicateItemsAllowed","uniqueItemText","customAddItemText","newValue","trim","currentValue","haystack","searchableChoices","needle","keys","searchFields","assign","fuseOptions","results","filterChoices","addEventListener","passive","form","addEventListeners","removeEventListener","removeEventListeners","event","target","ctrlKey","metaKey","hasFocusedInput","hasItems","hasChildren","keyString","String","fromCharCode","BACK_KEY","DELETE_KEY","ENTER_KEY","A_KEY","ESC_KEY","UP_KEY","DOWN_KEY","PAGE_UP_KEY","PAGE_DOWN_KEY","KEY_CODES","hasCtrlDownKeyPressed","keyDownActions","backKey","deleteKey","outerHTML","userHasRemovedValue","canReactivateChoices","canSearch","_handleSearch","activeElement","highlightAll","enterKey","targetWasButton","_handleButtonAction","preventDefault","highlightedChoice","highlightedState","_handleChoiceAction","downKey","pageUpKey","pageDownKey","directionInt","selectableChoiceIdentifier","nextEl","currentEl","getAdjacentEl","isScrolledIntoView","scrollToChildElement","_handleBackspace","touches","contains","containerInner","stopPropagation","HTMLElement","firstChoice","firstElementChild","isOnScrollbar","offsetX","offsetWidth","offsetLeft","closest","shiftKey","_handleItemAction","unhighlightAll","removeFocusState","addFocusState","resetTo","el","from","querySelectorAll","passedEl","classList","remove","setAttribute","indexOf","add","highlightChoice","setActiveDescendant","passedValue","passedCustomProperties","passedLabel","passedOptionId","prependValue","toString","appendValue","addItem","removeActiveItems","isType","removeItem","choiceLabel","choiceElementId","addChoice","elementId","getElementsByTagName","Math","floor","Date","valueOf","random","addGroup","addGroupChoices","isOptDisabled","args","callbackOnCreateTemplates","userTemplates","strToEl","Container","position","Input","preventPaste","paste","List","Dropdown","conceal","wrap","searchPlaceholderValue","insertBefore","firstChild","_addPredefinedGroups","_addPredefinedChoices","_addPredefinedItems","placeholderOption","tagName","hasSelectedChoice","firstEnabledChoiceIndex","findIndex","index","object","string","getType","toLowerCase","foundChoice","valueComparer","text","placeholderValue"],"mappings":";;;;;;;AAAAA,QACI,iBACA,sBACA,gBACA,qBACA,cACA,cACA,oBACA,kBACA,mBACA,iBACA,eACD,SAAUC,EAAMC,EAAOC,EAAOC,EAAYC,EAAWC,EAAWC,EAAgBC,EAAcC,EAAQC,EAAMC,GAC3G,aACA,MAAMC,EAAU,qBAAsBC,SAASC,gBAAgBC,OAAS,kBAAmBF,SAASC,gBAAgBC,MAC9GC,WACAC,EACFC,sBACI,OAAOC,OAAOC,mBACVC,cACI,OAAOL,GAEXM,gBACI,OAAOhB,KAInBiB,YAAYC,EAAU,gBAAiBC,MACnCC,KAAKC,OAASzB,EAAM0B,KAChBvB,EAAUwB,eACVZ,EAAQC,SAASG,QACjBI,IACCK,WAAY,CAACC,EAAGC,QAAoBA,KACzC,MAAMC,EAAuBtB,EAAEuB,KAAKR,KAAKC,OAAQtB,EAAUwB,gBACvDI,EAAqBE,QACrBC,QAAQC,KAAK,kCAAmCJ,EAAqBK,KAAK,OAE9E,MAAMC,EAAmC,iBAAZf,EAAuBX,SAAS2B,cAAchB,GAAWA,EACtF,KAAMe,aAAyBE,kBAAoBF,aAAyBG,mBACxE,MAAMC,UAAU,uEAapB,GAXAjB,KAAKkB,eAAiBL,EAAcM,OAASxC,EAAUyC,UACvDpB,KAAKqB,oBAAsBR,EAAcM,OAASxC,EAAU2C,gBAC5DtB,KAAKuB,yBAA2BV,EAAcM,OAASxC,EAAU6C,qBACjExB,KAAKyB,iBAAmBzB,KAAKqB,qBAAuBrB,KAAKuB,yBACzDvB,KAAKC,OAAOyB,cAAgB1B,KAAKuB,0BAA4BvB,KAAKC,OAAOyB,eAEjE,OACA,UACFC,SAAS3B,KAAKC,OAAO2B,yBACvB5B,KAAKC,OAAO2B,sBAAwB,QAEpC7B,EAAW8B,eAAqD,mBAA7B9B,EAAW8B,cAA8B,CAC5E,MAAMC,EAAK/B,EAAW8B,yBAAyBE,OAAShC,EAAW8B,cAAgB,IAAIE,OAAOhC,EAAW8B,eACzG7B,KAAKC,OAAO4B,cAAgBC,EAAGE,KAAKC,KAAKH,GA4B7C,GA1BI9B,KAAKkB,eACLlB,KAAKa,cAAgB,IAAInC,EAAWwD,cAChCpC,QAASe,EACTsB,WAAYnC,KAAKC,OAAOkC,WACxBC,UAAWpC,KAAKC,OAAOmC,YAG3BpC,KAAKa,cAAgB,IAAInC,EAAW2D,eAChCvC,QAASe,EACTsB,WAAYnC,KAAKC,OAAOkC,WACxBG,SAAUC,GAAQvC,KAAKwC,WAAWC,OAAOF,KAGjDvC,KAAK0C,aAAc,EACnB1C,KAAK2C,OAAS,IAAIlE,EAClBuB,KAAK4C,iBACL5C,KAAK6C,iBACL7C,KAAK8C,cACL9C,KAAK+C,cAAgB,GACrB/C,KAAKgD,WAAahD,KAAKC,OAAOyB,cAC9B1B,KAAKiD,kBAAmB,EACxBjD,KAAKkD,mBAAqB,EAC1BlD,KAAKmD,SAAU,EACfnD,KAAKoD,kBAAoBpD,KAAKqD,4BAC9BrD,KAAKsD,QAAUrE,EAAEsE,WAAWvD,KAAKa,cAAcf,QAAS,YACxDE,KAAKwD,WAAaxD,KAAKa,cAAc4C,KAChCzD,KAAKwD,WAAY,CAClB,MAAOE,UAAWC,GAAoBC,OAAOC,iBAAiB7D,KAAKa,cAAcf,UAC1E4D,UAAWI,GAAqBF,OAAOC,iBAAiB1E,SAASC,iBACpEuE,IAAqBG,IACrB9D,KAAKwD,WAAaG,GAuC1B,GApCA3D,KAAK+D,UAAaC,WAAY,eAC9BhE,KAAKiE,cAAgBjE,KAAKa,cAAcqD,aACxClE,KAAKmE,eAAiBnE,KAAKa,cAAclB,QACzCK,KAAKoE,eAAiBpE,KAAKC,OAAOoE,QAClCrE,KAAKsE,aAAetE,KAAKC,OAAOsE,MAC5BvE,KAAKa,cAAc2D,QACnBxE,KAAKsE,aAAetE,KAAKsE,aAAaG,OAAOzE,KAAKa,cAAc2D,MAAME,MAAM1E,KAAKC,OAAOmC,aAExFpC,KAAKa,cAAclB,SACnBK,KAAKa,cAAclB,QAAQgF,QAAQC,IAC/B5E,KAAKoE,eAAeS,MAChBL,MAAOI,EAAEJ,MACTM,MAAOF,EAAEG,UACTC,SAAUJ,EAAEI,SACZC,SAAUL,EAAEK,UAAYL,EAAEM,WAAWD,SACrCE,YAAyB,KAAZP,EAAEJ,OAAgBI,EAAEQ,aAAa,eAC9CC,iBAAkBT,EAAEU,aAAa,8BAI7CtF,KAAKuF,QAAUvF,KAAKuF,QAAQtD,KAAKjC,MACjCA,KAAKwF,SAAWxF,KAAKwF,SAASvD,KAAKjC,MACnCA,KAAKyF,QAAUzF,KAAKyF,QAAQxD,KAAKjC,MACjCA,KAAK0F,SAAW1F,KAAK0F,SAASzD,KAAKjC,MACnCA,KAAK2F,WAAa3F,KAAK2F,WAAW1D,KAAKjC,MACvCA,KAAK4F,SAAW5F,KAAK4F,SAAS3D,KAAKjC,MACnCA,KAAK6F,aAAe7F,KAAK6F,aAAa5D,KAAKjC,MAC3CA,KAAK8F,YAAc9F,KAAK8F,YAAY7D,KAAKjC,MACzCA,KAAK+F,aAAe/F,KAAK+F,aAAa9D,KAAKjC,MAC3CA,KAAKgG,aAAehG,KAAKgG,aAAa/D,KAAKjC,MAC3CA,KAAKiG,aAAejG,KAAKiG,aAAahE,KAAKjC,MAC3CA,KAAKkG,QAAUlG,KAAKkG,QAAQjE,KAAKjC,MACjCA,KAAKmG,YAAcnG,KAAKmG,YAAYlE,KAAKjC,MACzCA,KAAKoG,aAAepG,KAAKoG,aAAanE,KAAKjC,MAC3CA,KAAKqG,gBAAkBrG,KAAKqG,gBAAgBpE,KAAKjC,MACjDA,KAAKsG,aAAetG,KAAKsG,aAAarE,KAAKjC,MACvCA,KAAKa,cAAc0F,SAKnB,OAJKvG,KAAKC,OAAOuG,QACb9F,QAAQC,KAAK,oEAEjBX,KAAK0C,aAAc,GAGvB1C,KAAKyG,OAET5G,OACI,GAAIG,KAAK0C,YACL,OAEJ1C,KAAK0G,mBACL1G,KAAK2G,kBACL3G,KAAK4G,mBACL5G,KAAK4C,cAAgB3D,EAAE4H,YAAY7G,KAAK2C,OAAOmE,OAC/C9G,KAAK2C,OAAOoE,UAAU/G,KAAKuF,SAC3BvF,KAAKuF,UACLvF,KAAKgH,uBACkBhH,KAAKC,OAAOgH,UAAYjH,KAAKa,cAAcf,QAAQsF,aAAa,cAEnFpF,KAAKkH,UAETlH,KAAK0C,aAAc,EACnB,MAAMyE,eAACA,GAAkBnH,KAAKC,OAC1BkH,GAA4C,mBAAnBA,GACzBA,EAAeC,KAAKpH,MAG5BH,UACSG,KAAK0C,cAGV1C,KAAKqH,wBACLrH,KAAKa,cAAcyG,SACnBtH,KAAKuH,eAAeC,OAAOxH,KAAKa,cAAcf,SAC9CE,KAAKyH,aACDzH,KAAKyB,mBACLzB,KAAKa,cAAclB,QAAUK,KAAKmE,gBAEtCnE,KAAKwC,WAAa,KAClBxC,KAAK0C,aAAc,GAEvB7C,SASI,OARIG,KAAKa,cAAc6G,YACnB1H,KAAKa,cAAc8G,SAEnB3H,KAAKuH,eAAeG,aACpB1H,KAAKgH,qBACLhH,KAAK4H,MAAMD,SACX3H,KAAKuH,eAAeI,UAEjB3H,KAEXH,UASI,OARKG,KAAKa,cAAc6G,YACpB1H,KAAKa,cAAcqG,UAElBlH,KAAKuH,eAAeG,aACrB1H,KAAKqH,wBACLrH,KAAK4H,MAAMV,UACXlH,KAAKuH,eAAeL,WAEjBlH,KAEXH,cAAcgI,EAAMC,GAAW,GAC3B,IAAKD,EACD,OAAO7H,KAEX,MAAM+H,GAACA,EAAEC,QAAEA,GAAU,EAAExD,MAAEA,EAAQ,GAAEM,MAAEA,EAAQ,IAAM+C,EAC7CI,EAAQD,GAAW,EAAIhI,KAAK2C,OAAOuF,aAAaF,GAAW,KAUjE,OATAhI,KAAK2C,OAAOwF,SAASrJ,EAAasJ,cAAcL,GAAI,IAChDD,GACA9H,KAAKa,cAAcwH,aAAa1J,EAAU2J,OAAOF,eAC7CL,GAAAA,EACAvD,MAAAA,EACAM,MAAAA,EACAyD,WAAYN,GAASA,EAAMzD,MAAQyD,EAAMzD,MAAQ,OAGlDxE,KAEXH,gBAAgBgI,GACZ,IAAKA,EACD,OAAO7H,KAEX,MAAM+H,GAACA,EAAEC,QAAEA,GAAU,EAAExD,MAAEA,EAAQ,GAAEM,MAAEA,EAAQ,IAAM+C,EAC7CI,EAAQD,GAAW,EAAIhI,KAAK2C,OAAOuF,aAAaF,GAAW,KAQjE,OAPAhI,KAAK2C,OAAOwF,SAASrJ,EAAasJ,cAAcL,GAAI,IACpD/H,KAAKa,cAAcwH,aAAa1J,EAAU2J,OAAOF,eAC7CL,GAAAA,EACAvD,MAAAA,EACAM,MAAAA,EACAyD,WAAYN,GAASA,EAAMzD,MAAQyD,EAAMzD,MAAQ,OAE9CxE,KAEXH,eAEI,OADAG,KAAK2C,OAAO4B,MAAMI,QAAQkD,GAAQ7H,KAAKoI,cAAcP,IAC9C7H,KAEXH,iBAEI,OADAG,KAAK2C,OAAO4B,MAAMI,QAAQkD,GAAQ7H,KAAKwI,gBAAgBX,IAChD7H,KAEXH,yBAAyB2E,GAErB,OADAxE,KAAK2C,OAAO8F,YAAYC,OAAOb,GAAQA,EAAKrD,QAAUA,GAAOG,QAAQkD,GAAQ7H,KAAK2I,YAAYd,IACvF7H,KAEXH,kBAAkB+I,GAEd,OADA5I,KAAK2C,OAAO8F,YAAYC,OAAO,EAAEX,GAAAA,KAAQA,IAAOa,GAAYjE,QAAQkD,GAAQ7H,KAAK2I,YAAYd,IACtF7H,KAEXH,uBAAuBiI,GAAW,GAO9B,OANA9H,KAAK2C,OAAOkG,uBAAuBlE,QAAQkD,IACvC7H,KAAK2I,YAAYd,GACbC,GACA9H,KAAK8I,eAAejB,EAAKrD,SAG1BxE,KAEXH,aAAakJ,GACT,OAAI/I,KAAKgJ,SAASzC,SACPvG,MAEXiJ,sBAAsB,KAClBjJ,KAAKgJ,SAASE,OACdlJ,KAAKuH,eAAe4B,KAAKnJ,KAAKgJ,SAASI,wBAClCL,GAAqB/I,KAAKgD,YAC3BhD,KAAK4H,MAAMyB,QAEfrJ,KAAKa,cAAcwH,aAAa1J,EAAU2J,OAAOgB,mBAE9CtJ,MAEXH,aAAa0J,GACT,OAAKvJ,KAAKgJ,SAASzC,UAGnB0C,sBAAsB,KAClBjJ,KAAKgJ,SAASQ,OACdxJ,KAAKuH,eAAekC,SACfF,GAAoBvJ,KAAKgD,aAC1BhD,KAAK4H,MAAM8B,yBACX1J,KAAK4H,MAAM+B,QAEf3J,KAAKa,cAAcwH,aAAa1J,EAAU2J,OAAOsB,mBAE9C5J,MAXIA,KAafH,SAASgK,GAAY,GACjB,MAAMC,EAAS9J,KAAK2C,OAAO8F,YAAYsB,OAAO,CAACC,EAAenC,KAC1D,MAAMoC,EAAYJ,EAAYhC,EAAKrD,MAAQqD,EAE3C,OADAmC,EAAcnF,KAAKoF,GACZD,OAEX,OAAOhK,KAAKqB,oBAAsByI,EAAO,GAAKA,EAElDjK,SAAS0E,GACL,OAAKvE,KAAK0C,aAGV6B,EAAMI,QAAQH,GAASxE,KAAKkK,iBAAiB1F,IACtCxE,MAHIA,KAKfH,iBAAiB2E,GACb,IAAKxE,KAAK0C,aAAe1C,KAAKkB,eAC1B,OAAOlB,KAIX,OAFoBmK,MAAMC,QAAQ5F,GAASA,GAASA,IACxCG,QAAQ0F,GAAOrK,KAAKsK,4BAA4BD,IACrDrK,KAEXH,WAAW0K,KAA4B/F,EAAQ,QAASM,EAAQ,QAAS0F,GAAiB,GACtF,IAAKxK,KAAK0C,YACN,MAAM,IAAI+H,eAAe,kEAE7B,IAAKzK,KAAKyB,iBACN,MAAM,IAAIR,UAAU,qDAExB,GAAqB,iBAAVuD,IAAuBA,EAC9B,MAAM,IAAIvD,UAAU,qEAKxB,GAHIuJ,GACAxK,KAAK0K,eAE4B,mBAA1BH,EAAsC,CAC7C,MAAMI,EAAUJ,EAAsBvK,MACtC,GAAuB,mBAAZ4K,SAA0BD,aAAmBC,QACpD,OAAO,IAAIA,QAAQC,GAAW5B,sBAAsB4B,IAAUC,KAAK,IAAM9K,KAAK+K,qBAAoB,IAAOD,KAAK,IAAMH,GAASG,KAAKvI,GAAQvC,KAAKgL,WAAWzI,EAAMiC,EAAOM,EAAO0F,IAAiBS,MAAMC,IAC5LlL,KAAKC,OAAOuG,QACb9F,QAAQyK,MAAMD,KAEnBJ,KAAK,IAAM9K,KAAK+K,qBAAoB,IAAQD,KAAK,IAAM9K,MAE9D,IAAKmK,MAAMC,QAAQO,GACf,MAAM,IAAI1J,6GAA8G0J,KAE5H,OAAO3K,KAAKgL,WAAWL,EAASnG,EAAOM,GAAO,GAElD,IAAKqF,MAAMC,QAAQG,GACf,MAAM,IAAItJ,UAAU,sHAwBxB,OAtBAjB,KAAKuH,eAAe6D,qBACpBpL,KAAKqL,gBACLd,EAAsB5F,QAAQ2G,IACtBA,EAAcjH,QACdrE,KAAKuL,WACDxD,GAAIyD,SAASF,EAAcvD,GAAI,KAAO,KACtCE,MAAOqD,EACPG,SAAUjH,EACVkH,SAAU5G,IAGd9E,KAAK2L,YACDnH,MAAO8G,EAAc9G,GACrBM,MAAOwG,EAAcxG,GACrB8G,WAAYN,EAActG,SAC1B0C,WAAY4D,EAAcrG,SAC1BI,iBAAkBiG,EAAcjG,iBAChCF,YAAamG,EAAcnG,gBAIvCnF,KAAK6L,eACE7L,KAEXH,eAEI,OADAG,KAAK2C,OAAOwF,SAAStJ,EAAe6L,gBAC7B1K,KAEXH,aAEI,OADAG,KAAK2C,OAAOwF,SAASnJ,EAAK8M,YACnB9L,KAEXH,aACI,MAAMkM,GAAuB/L,KAAKqB,oBAMlC,OALArB,KAAK4H,MAAMoE,MAAMD,IACZ/L,KAAKkB,gBAAkBlB,KAAKgD,aAC7BhD,KAAKiM,cAAe,EACpBjM,KAAK2C,OAAOwF,SAAS+D,EAAEC,iBAAgB,KAEpCnM,KAEXH,UACI,GAAIG,KAAK2C,OAAOyJ,YACZ,OAEJpM,KAAK6C,cAAgB7C,KAAK2C,OAAOmE,MACjC,MAAMuF,EAAerM,KAAK6C,cAAcwB,UAAYrE,KAAK8C,WAAWuB,SAAWrE,KAAK6C,cAAc9D,SAAWiB,KAAK8C,WAAW/D,QAAUiB,KAAK6C,cAAc0B,QAAUvE,KAAK8C,WAAWyB,MAC9K+H,EAAsBtM,KAAKyB,iBAC3B8K,EAAoBvM,KAAK6C,cAAc0B,QAAUvE,KAAK8C,WAAWyB,MAClE8H,IAGDC,GACAtM,KAAKwM,iBAELD,GACAvM,KAAKyM,eAETzM,KAAK8C,WAAa9C,KAAK6C,eAE3BhD,iBACI,MAAM6M,aAACA,EAAYC,cAAEA,GAAiB3M,KAAK2C,OAC3C,IAAIiK,EAAqBzN,SAAS0N,yBAKlC,GAJA7M,KAAK8M,WAAWd,QACZhM,KAAKC,OAAO8M,qBACZ9D,sBAAsB,IAAMjJ,KAAK8M,WAAWE,eAE5CN,EAAajM,QAAU,IAAMT,KAAKiM,aAAc,CAChD,MAAMgB,EAAqBN,EAAcjE,OAAOwE,IAA6C,IAA7BA,EAAa/H,cAAkD,IAA1B+H,EAAalF,SAC9GiF,EAAmBxM,QAAU,IAC7BmM,EAAqB5M,KAAKmN,uBAAuBF,EAAoBL,IAEzEA,EAAqB5M,KAAKoN,sBAAsBV,EAAcC,EAAeC,QACtED,EAAclM,QAAU,IAC/BmM,EAAqB5M,KAAKmN,uBAAuBR,EAAeC,IAEpE,GAAIA,EAAmBS,YAAcT,EAAmBS,WAAW5M,OAAS,EAAG,CAC3E,MAAMgI,YAACA,GAAezI,KAAK2C,OACrB2K,EAAatN,KAAKuN,YAAY9E,EAAazI,KAAK4H,MAAMpD,OACxD8I,EAAWE,UACXxN,KAAK8M,WAAWW,OAAOb,GACvB5M,KAAK0N,oBAEL1N,KAAK8M,WAAWW,OAAOzN,KAAK2N,aAAa,SAAUL,EAAWM,aAE/D,CACH,IAAIC,EACAD,EACA5N,KAAKiM,cACL2B,EAA8C,mBAA9B5N,KAAKC,OAAO6N,cAA+B9N,KAAKC,OAAO6N,gBAAkB9N,KAAKC,OAAO6N,cACrGD,EAAe7N,KAAK2N,aAAa,SAAUC,EAAQ,gBAEnDA,EAA8C,mBAA9B5N,KAAKC,OAAO8N,cAA+B/N,KAAKC,OAAO8N,gBAAkB/N,KAAKC,OAAO8N,cACrGF,EAAe7N,KAAK2N,aAAa,SAAUC,EAAQ,eAEvD5N,KAAK8M,WAAWW,OAAOI,IAG/BhO,eACI,MAAM4I,EAAczI,KAAK2C,OAAO8F,gBAChCzI,KAAKgO,SAAShC,QACd,MAAMiC,EAAmBjO,KAAKkO,qBAAqBzF,GAC/CwF,EAAiBZ,YACjBrN,KAAKgO,SAASP,OAAOQ,GAG7BpO,sBAAsBd,EAAQsF,EAAS8J,EAAWhP,SAAS0N,0BACvD,MAAMuB,EAAkBnG,GAAS5D,EAAQqE,OAAO2F,GACxCrO,KAAKqB,oBACEgN,EAAOrG,UAAYC,EAAMF,GAE7BsG,EAAOrG,UAAYC,EAAMF,KAA6C,WAAtC/H,KAAKC,OAAO2B,wBAAuCyM,EAAOrJ,WAarG,OAXIhF,KAAKC,OAAOqO,YACZvP,EAAOwP,KAAKvO,KAAKC,OAAOuO,QAE5BzP,EAAO4F,QAAQsD,IACX,MAAMwG,EAAeL,EAAgBnG,GACrC,GAAIwG,EAAahO,QAAU,EAAG,CAC1B,MAAMiO,EAAgB1O,KAAK2N,aAAa,cAAe1F,GACvDkG,EAASQ,YAAYD,GACrB1O,KAAKmN,uBAAuBsB,EAAcN,GAAU,MAGrDA,EAEXtO,uBAAuBwE,EAAS8J,EAAWhP,SAAS0N,yBAA0B+B,GAAc,GACxF,MAAMhN,sBAACA,EAAqBiN,kBAAEA,EAAiBC,kBAAEA,GAAqB9O,KAAKC,OACrEyI,EAAS1I,KAAKiM,aAAehN,EAAE8P,YAAc/O,KAAKC,OAAOuO,OACzDQ,EAAeX,IAEjB,GAD+C,SAA1BzM,IAAmC5B,KAAKqB,sBAAwBgN,EAAOrJ,UAC1E,CACd,MAAM6I,EAAe7N,KAAK2N,aAAa,SAAUU,EAAQrO,KAAKC,OAAOgP,gBACrEd,EAASQ,YAAYd,KAG7B,IAAIqB,EAAsB7K,EACI,SAA1BzC,GAAqC5B,KAAKqB,sBAC1C6N,EAAsB7K,EAAQqE,OAAO2F,IAAWA,EAAOrJ,WAE3D,MAAMmK,mBAACA,EAAkBC,cAAEA,GAAiBF,EAAoBnF,OAAO,CAACsF,EAAKhB,KACrEA,EAAOlJ,YACPkK,EAAIF,mBAAmBtK,KAAKwJ,GAE5BgB,EAAID,cAAcvK,KAAKwJ,GAEpBgB,IAEPF,sBACAC,oBAEApP,KAAKC,OAAOqO,YAActO,KAAKiM,eAC/BmD,EAAcb,KAAK7F,GAEvB,IAAI4G,EAAcJ,EAAoBzO,OACtC,MAAM8O,EAAgBvP,KAAKqB,wBACpB8N,KACAC,GACHA,EACApP,KAAKiM,aACLqD,EAAcT,EACPC,GAAqBA,EAAoB,IAAMF,IACtDU,EAAcR,GAElB,IAAK,IAAIU,EAAI,EAAGA,EAAIF,EAAaE,GAAK,EAC9BD,EAAcC,IACdR,EAAaO,EAAcC,IAGnC,OAAOrB,EAEXtO,qBAAqB0E,EAAO4J,EAAWhP,SAAS0N,0BAC5C,MAAM4C,gBAACA,EAAejB,OAAEA,EAAMkB,iBAAEA,GAAoB1P,KAAKC,OACrDwP,IAAoBzP,KAAKqB,qBACzBkD,EAAMgK,KAAKC,GAEXxO,KAAKkB,eACLlB,KAAKa,cAAc2D,MAAQD,EAE3BvE,KAAKa,cAAclB,QAAU4E,EAOjC,OADAA,EAAMI,QAJoBkD,IACtB,MAAM8H,EAAW3P,KAAK2N,aAAa,OAAQ9F,EAAM6H,GACjDvB,EAASQ,YAAYgB,KAGlBxB,EAEXtO,eAAe2E,QACGoL,IAAVpL,GAAiC,OAAVA,GAG3BxE,KAAKa,cAAcwH,aAAa1J,EAAU2J,OAAOuH,QAAUrL,MAAAA,IAE/D3E,2BACI,MAAMiQ,kBAACA,GAAqB9P,KAAK2C,OAC7BmN,IACA9P,KAAK+P,UACDvL,MAAOsL,EAAkBtL,MACzBM,MAAOgL,EAAkBhL,MACzBkL,SAAUF,EAAkB/H,GAC5BC,QAAS8H,EAAkB9H,QAC3B7C,YAAa2K,EAAkB3K,cAEnCnF,KAAK8I,eAAegH,EAAkBtL,QAG9C3E,oBAAoB4I,EAAa3I,GAC7B,KAAK2I,GAAgB3I,GAAYE,KAAKC,OAAOgQ,aAAgBjQ,KAAKC,OAAOyP,kBACrE,OAEJ,MAAMQ,EAASpQ,EAAQoF,WAAWI,aAAa,WACzC6K,EAAe1H,EAAY2H,KAAKvI,GAAQA,EAAKE,KAAOyD,SAAS0E,EAAQ,KAC3ElQ,KAAK2I,YAAYwH,GACjBnQ,KAAK8I,eAAeqH,EAAa3L,OAC7BxE,KAAKqB,qBACLrB,KAAKqQ,2BAGbxQ,kBAAkB4I,EAAa3I,EAASwQ,GAAc,GAClD,IAAK7H,IAAgB3I,IAAYE,KAAKC,OAAOgQ,aAAejQ,KAAKqB,oBAC7D,OAEJ,MAAMkP,EAAWzQ,EAAQwF,aAAa,WACtCmD,EAAY9D,QAAQkD,IACZA,EAAKE,KAAOyD,SAAS+E,EAAU,KAAQ1I,EAAK2I,aAEpCF,GAAezI,EAAK2I,aAC5BxQ,KAAKwI,gBAAgBX,GAFrB7H,KAAKoI,cAAcP,KAK3B7H,KAAK4H,MAAMyB,QAEfxJ,oBAAoB4I,EAAa3I,GAC7B,IAAK2I,IAAgB3I,EACjB,OAEJ,MAAMiI,GAACA,GAAMjI,EAAQ2Q,QACfpC,EAASrO,KAAK2C,OAAO+N,cAAc3I,GACzC,IAAKsG,EACD,OAEJ,MAAMsC,EAAgBlI,EAAY,IAAMA,EAAY,GAAGmI,QAAUnI,EAAY,GAAGmI,QAAU,KACpFC,EAAoB7Q,KAAKgJ,SAASzC,SAGxC,GAFA8H,EAAOuC,QAAUD,EACjB3Q,KAAKa,cAAcwH,aAAa1J,EAAU2J,OAAO+F,QAAUA,OAAAA,KACtDA,EAAOrJ,WAAaqJ,EAAOpJ,SAAU,CACnBjF,KAAKuN,YAAY9E,EAAa4F,EAAO7J,OACzCgJ,WACXxN,KAAK+P,UACDvL,MAAO6J,EAAO7J,MACdM,MAAOuJ,EAAOvJ,MACdkL,SAAU3B,EAAOtG,GACjBC,QAASqG,EAAOrG,QAChB3C,iBAAkBgJ,EAAOhJ,iBACzBF,YAAakJ,EAAOlJ,YACpByL,QAASvC,EAAOuC,UAEpB5Q,KAAK8I,eAAeuF,EAAO7J,QAGnCxE,KAAK8Q,aACDD,GAAqB7Q,KAAKqB,sBAC1BrB,KAAK4J,cAAa,GAClB5J,KAAKuH,eAAe8B,SAG5BxJ,iBAAiB4I,GACb,IAAKzI,KAAKC,OAAOgQ,cAAgBxH,EAC7B,OAEJ,MAAMsI,EAAWtI,EAAYA,EAAYhI,OAAS,GAC5CuQ,EAAsBvI,EAAYwI,KAAKpJ,GAAQA,EAAK2I,aACtDxQ,KAAKC,OAAOiR,YAAcF,GAAuBD,GACjD/Q,KAAK4H,MAAMpD,MAAQuM,EAASvM,MAC5BxE,KAAK4H,MAAMuJ,WACXnR,KAAK2I,YAAYoI,GACjB/Q,KAAK8I,eAAeiI,EAASvM,SAExBwM,GACDhR,KAAKoI,cAAc2I,GAAU,GAEjC/Q,KAAKoR,wBAAuB,IAGpCvR,gBACIG,KAAK2C,OAAOwF,SAASnJ,EAAKqS,cAAa,IAE3CxR,eACIG,KAAK2C,OAAOwF,SAASnJ,EAAKqS,cAAa,IAE3CxR,oBAAoByR,GAAa,GAC7B,IAAIC,EAAkBvR,KAAKgO,SAASwD,aAAcxR,KAAKC,OAAOkC,WAAWgD,eACrEmM,GACAtR,KAAKkH,UACLlH,KAAKuH,eAAekK,kBAChBzR,KAAKqB,oBACAkQ,EAIDA,EAAgBxM,UAAY/E,KAAKC,OAAOyR,aAHxCH,EAAkBvR,KAAK2N,aAAa,cAAe3N,KAAKC,OAAOyR,aAC/D1R,KAAKgO,SAASP,OAAO8D,IAKzBvR,KAAK4H,MAAMzC,YAAcnF,KAAKC,OAAOyR,cAGzC1R,KAAK2H,SACL3H,KAAKuH,eAAe6D,qBAChBpL,KAAKqB,oBACLkQ,EAAgBxM,UAAY/E,KAAKoD,mBAAqB,GAEtDpD,KAAK4H,MAAMzC,YAAcnF,KAAKoD,mBAAqB,IAI/DvD,cAAc2E,GACV,IAAKA,IAAUxE,KAAK4H,MAAM+J,WACtB,OAEJ,MAAMtN,QAACA,GAAWrE,KAAK2C,QACjBiP,YAACA,EAAWC,cAAEA,GAAiB7R,KAAKC,OACpC6R,EAAqBzN,EAAQ4M,KAAKxO,IAAWA,EAAOsP,QAC1D,GAAIvN,GAASA,EAAM/D,QAAUmR,EAAa,CACtC,MAAMI,EAAcH,EAAgB7R,KAAKiS,eAAezN,GAAS,EACjExE,KAAKa,cAAcwH,aAAa1J,EAAU2J,OAAO4J,QAC7C1N,MAAAA,EACAwN,YAAAA,SAEGF,IACP9R,KAAKiM,cAAe,EACpBjM,KAAK2C,OAAOwF,SAAS+D,EAAEC,iBAAgB,KAG/CtM,YAAY4I,EAAajE,GACrB,IAAI8I,GAAa,EACbM,EAA4C,mBAA5B5N,KAAKC,OAAOkS,YAA6BnS,KAAKC,OAAOkS,YAAY3N,GAASxE,KAAKC,OAAOkS,YAC1G,IAAKnS,KAAKqB,oBAAqB,CAC3B,MAAM+Q,EAAmBnT,EAAEoT,cAAc5J,EAAajE,GAClDxE,KAAKC,OAAOqS,aAAe,GAAKtS,KAAKC,OAAOqS,cAAgB7J,EAAYhI,SACxE6M,GAAa,EACbM,EAA4C,mBAA5B5N,KAAKC,OAAOsS,YAA6BvS,KAAKC,OAAOsS,YAAYvS,KAAKC,OAAOqS,cAAgBtS,KAAKC,OAAOsS,cAExHvS,KAAKC,OAAOuS,uBAAyBJ,GAAoB9E,IAC1DA,GAAa,EACbM,EAA+C,mBAA/B5N,KAAKC,OAAOwS,eAAgCzS,KAAKC,OAAOwS,eAAejO,GAASxE,KAAKC,OAAOwS,gBAE5GzS,KAAKkB,gBAAkBlB,KAAKC,OAAOgH,UAAYqG,GAAmD,mBAA9BtN,KAAKC,OAAO4B,gBAAiC7B,KAAKC,OAAO4B,cAAc2C,KAC3I8I,GAAa,EACbM,EAAkD,mBAAlC5N,KAAKC,OAAOyS,kBAAmC1S,KAAKC,OAAOyS,kBAAkBlO,GAASxE,KAAKC,OAAOyS,mBAG1H,OACIlF,SAAUF,EACVM,OAAAA,GAGR/N,eAAe2E,GACX,MAAMmO,EAA4B,iBAAVnO,EAAqBA,EAAMoO,OAASpO,EACtDqO,EAA6C,iBAAvB7S,KAAK+C,cAA6B/C,KAAK+C,cAAc6P,OAAS5S,KAAK+C,cAC/F,GAAI4P,EAASlS,OAAS,GAAKkS,OAAiBE,KACxC,OAAO,EAEX,MAAMC,EAAW9S,KAAK2C,OAAOoQ,kBACvBC,EAASL,EACTM,MAAWjT,KAAKC,OAAOiT,cACvBvT,EAAUF,OAAO0T,OAAOnT,KAAKC,OAAOmT,aAAeH,KAAAA,IAEnDI,EADO,IAAI9U,EAAKuU,EAAUnT,GACXuS,OAAOc,GAK5B,OAJAhT,KAAK+C,cAAgB4P,EACrB3S,KAAKkD,mBAAqB,EAC1BlD,KAAKiM,cAAe,EACpBjM,KAAK2C,OAAOwF,SAAStJ,EAAeyU,cAAcD,IAC3CA,EAAQ5S,OAEnBZ,qBACI,MAAMT,gBAACA,GAAmBD,SAC1BC,EAAgBmU,iBAAiB,WAAYvT,KAAK8F,aAAa,GAC/D9F,KAAKuH,eAAezH,QAAQyT,iBAAiB,UAAWvT,KAAK2F,YAAY,GACzE3F,KAAKuH,eAAezH,QAAQyT,iBAAiB,YAAavT,KAAK+F,cAAc,GAC7E3G,EAAgBmU,iBAAiB,QAASvT,KAAK4F,UAAY4N,SAAS,IACpEpU,EAAgBmU,iBAAiB,YAAavT,KAAK6F,cAAgB2N,SAAS,IAC5ExT,KAAKgJ,SAASlJ,QAAQyT,iBAAiB,YAAavT,KAAKgG,cAAgBwN,SAAS,IAC9ExT,KAAKqB,sBACLrB,KAAKuH,eAAezH,QAAQyT,iBAAiB,QAASvT,KAAKwF,UAAYgO,SAAS,IAChFxT,KAAKuH,eAAezH,QAAQyT,iBAAiB,OAAQvT,KAAKyF,SAAW+N,SAAS,KAElFxT,KAAK4H,MAAM9H,QAAQyT,iBAAiB,QAASvT,KAAK0F,UAAY8N,SAAS,IACvExT,KAAK4H,MAAM9H,QAAQyT,iBAAiB,QAASvT,KAAKwF,UAAYgO,SAAS,IACvExT,KAAK4H,MAAM9H,QAAQyT,iBAAiB,OAAQvT,KAAKyF,SAAW+N,SAAS,IACjExT,KAAK4H,MAAM9H,QAAQ2T,MACnBzT,KAAK4H,MAAM9H,QAAQ2T,KAAKF,iBAAiB,QAASvT,KAAKiG,cAAgBuN,SAAS,IAEpFxT,KAAK4H,MAAM8L,oBAEf7T,wBACI,MAAMT,gBAACA,GAAmBD,SAC1BC,EAAgBuU,oBAAoB,WAAY3T,KAAK8F,aAAa,GAClE9F,KAAKuH,eAAezH,QAAQ6T,oBAAoB,UAAW3T,KAAK2F,YAAY,GAC5E3F,KAAKuH,eAAezH,QAAQ6T,oBAAoB,YAAa3T,KAAK+F,cAAc,GAChF3G,EAAgBuU,oBAAoB,QAAS3T,KAAK4F,UAClDxG,EAAgBuU,oBAAoB,YAAa3T,KAAK6F,cACtD7F,KAAKgJ,SAASlJ,QAAQ6T,oBAAoB,YAAa3T,KAAKgG,cACxDhG,KAAKqB,sBACLrB,KAAKuH,eAAezH,QAAQ6T,oBAAoB,QAAS3T,KAAKwF,UAC9DxF,KAAKuH,eAAezH,QAAQ6T,oBAAoB,OAAQ3T,KAAKyF,UAEjEzF,KAAK4H,MAAM9H,QAAQ6T,oBAAoB,QAAS3T,KAAK0F,UACrD1F,KAAK4H,MAAM9H,QAAQ6T,oBAAoB,QAAS3T,KAAKwF,UACrDxF,KAAK4H,MAAM9H,QAAQ6T,oBAAoB,OAAQ3T,KAAKyF,SAChDzF,KAAK4H,MAAM9H,QAAQ2T,MACnBzT,KAAK4H,MAAM9H,QAAQ2T,KAAKE,oBAAoB,QAAS3T,KAAKiG,cAE9DjG,KAAK4H,MAAMgM,uBAEf/T,WAAWgU,GACP,MAAMC,OAACA,EAAMlD,QAAEA,EAAOmD,QAAEA,EAAOC,QAAEA,GAAWH,GACtCpL,YAACA,GAAezI,KAAK2C,OACrBsR,EAAkBjU,KAAK4H,MAAM+J,WAC7Bd,EAAoB7Q,KAAKgJ,SAASzC,SAClC2N,EAAWlU,KAAKgO,SAASmG,cACzBC,EAAYC,OAAOC,aAAa1D,IAChC2D,SAACA,EAAQC,WAAEA,EAAUC,UAAEA,EAASC,MAAEA,EAAKC,QAAEA,EAAOC,OAAEA,EAAMC,SAAEA,EAAQC,YAAEA,EAAWC,cAAEA,GAAiBpW,EAAUqW,UAC5GC,EAAwBlB,GAAWC,GACpChU,KAAKkB,gBAAkB,iBAAiBc,KAAKoS,IAC9CpU,KAAKsJ,eAET,MAAM4L,GACFrV,CAAC6U,GAAQ1U,KAAKkG,QACdrG,CAAC4U,GAAYzU,KAAKmG,YAClBtG,CAAC8U,GAAU3U,KAAKoG,aAChBvG,CAAC+U,GAAS5U,KAAKqG,gBACfxG,CAACiV,GAAc9U,KAAKqG,gBACpBxG,CAACgV,GAAW7U,KAAKqG,gBACjBxG,CAACkV,GAAgB/U,KAAKqG,gBACtBxG,CAAC2U,GAAaxU,KAAKsG,aACnBzG,CAAC0U,GAAWvU,KAAKsG,cAEjB4O,EAAetE,IACfsE,EAAetE,IACXiD,MAAAA,EACAC,OAAAA,EACAlD,QAAAA,EACAoD,QAAAA,EACAvL,YAAAA,EACAwL,gBAAAA,EACApD,kBAAAA,EACAqD,SAAAA,EACAe,sBAAAA,IAIZpV,UAASiU,OAACA,EAAMlD,QAAEA,IACd,MAAMpM,MAACA,GAASxE,KAAK4H,OACfa,YAACA,GAAezI,KAAK2C,OACrB2K,EAAatN,KAAKuN,YAAY9E,EAAajE,IAE7C+P,SAAUY,EACVX,WAAYY,GACZzW,EAAUqW,UACd,GAAIhV,KAAKkB,eAAgB,CAErB,GAD8BoM,EAAWM,QAAUpJ,EACxB,CACvB,MAAMqJ,EAAe7N,KAAK2N,aAAa,SAAUL,EAAWM,QAC5D5N,KAAKgJ,SAASlJ,QAAQiF,UAAY8I,EAAawH,UAC/CrV,KAAKsJ,cAAa,QAElBtJ,KAAK4J,cAAa,OAEnB,CACH,MAAM0L,GAAuB1E,IAAYuE,GAAWvE,IAAYwE,KAAetB,EAAOtP,MAChF+Q,GAAwBvV,KAAKkB,gBAAkBlB,KAAKiM,aACpDuJ,EAAYxV,KAAKgD,YAAcsK,EAAWE,SAC5C8H,GAAuBC,GACvBvV,KAAKiM,cAAe,EACpBjM,KAAK2C,OAAOwF,SAAStJ,EAAesN,iBAAgB,KAC7CqJ,GACPxV,KAAKyV,cAAczV,KAAK4H,MAAMpD,OAGtCxE,KAAKgD,WAAahD,KAAKC,OAAOyB,cAElC7B,SAAQqU,SAACA,EAAQe,sBAAEA,IACf,GAAIA,GAAyBf,EAAU,CACnClU,KAAKgD,YAAa,EACUhD,KAAKC,OAAOgQ,cAAgBjQ,KAAK4H,MAAMpD,OAASxE,KAAK4H,MAAM9H,UAAYX,SAASuW,eAExG1V,KAAK2V,gBAIjB9V,aAAYgU,MAACA,EAAKC,OAAEA,EAAMrL,YAAEA,EAAWoI,kBAAEA,IACrC,MAAO4D,UAAWmB,GAAYjX,EAAUqW,UAClCa,EAAkB/B,EAAO1O,aAAa,eAC5C,GAAIpF,KAAKkB,gBAAkB4S,EAAOtP,MAAO,CACrC,MAAMA,MAACA,GAASxE,KAAK4H,MACF5H,KAAKuN,YAAY9E,EAAajE,GAClCgJ,WACXxN,KAAK4J,cAAa,GAClB5J,KAAK+P,UAAWvL,MAAAA,IAChBxE,KAAK8I,eAAetE,GACpBxE,KAAK8Q,cAOb,GAJI+E,IACA7V,KAAK8V,oBAAoBrN,EAAaqL,GACtCD,EAAMkC,kBAENlF,EAAmB,CACnB,MAAMmF,EAAoBhW,KAAKgJ,SAASwI,aAAcxR,KAAKC,OAAOkC,WAAW8T,oBACzED,IACIvN,EAAY,KACZA,EAAY,GAAGmI,QAAUgF,GAE7B5V,KAAKkW,oBAAoBzN,EAAauN,IAE1CnC,EAAMkC,sBACC/V,KAAKqB,sBACZrB,KAAKsJ,eACLuK,EAAMkC,kBAGdlW,cAAagR,kBAACA,IACNA,IACA7Q,KAAK4J,cAAa,GAClB5J,KAAKuH,eAAe8B,SAG5BxJ,iBAAgBgU,MAACA,EAAKhD,kBAAEA,EAAiBD,QAAEA,EAAOoD,QAAEA,IAChD,MACIa,SAAUsB,EACVrB,YAAasB,EACbrB,cAAesB,GACf1X,EAAUqW,UACd,GAAInE,GAAqB7Q,KAAKqB,oBAAqB,CAC/CrB,KAAKsJ,eACLtJ,KAAKgD,YAAa,EAClB,MAAMsT,EAAe1F,IAAYuF,GAAWvF,IAAYyF,EAAc,GAAK,EAErEE,EAA6B,2BACnC,IAAIC,EACJ,GAHgBxC,GAAWpD,IAAYyF,GAAezF,IAAYwF,EAK1DI,EADAF,EAAe,EACNtW,KAAKgJ,SAASlJ,QAAQgB,iBAAkByV,kBAExCvW,KAAKgJ,SAASlJ,QAAQgB,cAAcyV,OAE9C,CACH,MAAME,EAAYzW,KAAKgJ,SAASlJ,QAAQgB,kBAAmBd,KAAKC,OAAOkC,WAAW8T,oBAE9EO,EADAC,EACSxX,EAAEyX,cAAcD,EAAWF,EAA4BD,GAEvDtW,KAAKgJ,SAASlJ,QAAQgB,cAAcyV,GAGjDC,IACKvX,EAAE0X,mBAAmBH,EAAQxW,KAAK8M,WAAWhN,QAASwW,IACvDtW,KAAK8M,WAAW8J,qBAAqBJ,EAAQF,GAEjDtW,KAAK0N,iBAAiB8I,IAE1B3C,EAAMkC,kBAGdlW,cAAagU,MAACA,EAAKC,OAAEA,EAAMG,gBAAEA,EAAexL,YAAEA,KACtCwL,GAAoBH,EAAOtP,OAAUxE,KAAKqB,sBAC1CrB,KAAK6W,iBAAiBpO,GACtBoL,EAAMkC,kBAGdlW,eACQG,KAAKmD,UACLnD,KAAKmD,SAAU,GAGvBtD,YAAYgU,GACR,MAAMC,OAACA,GAAUD,GAASA,EAAMiD,QAAQ,GAExC,GADgC9W,KAAKmD,SAAWnD,KAAKuH,eAAezH,QAAQiX,SAASjD,GACxD,EACOA,IAAW9T,KAAKuH,eAAezH,SAAWgU,IAAW9T,KAAKgX,eAAelX,WAEjGE,KAAKkB,eACLlB,KAAK4H,MAAMyB,QACJrJ,KAAKuB,0BACZvB,KAAKsJ,gBAGbuK,EAAMoD,kBAEVjX,KAAKmD,SAAU,EAEnBtD,aAAagU,GACT,MAAMC,OAACA,GAAUD,EACjB,KAAMC,aAAkBoD,aACpB,OAEJ,GAAIhY,GAAWc,KAAK8M,WAAWhN,QAAQiX,SAASjD,GAAS,CACrD,MAAMqD,EAAcnX,KAAK8M,WAAWhN,QAAQsX,kBACtCC,EAAoC,QAApBrX,KAAKwD,WAAuBqQ,EAAMyD,SAAWH,EAAYI,YAAc1D,EAAMyD,QAAUH,EAAYK,WACzHxX,KAAKiD,iBAAmBoU,EAE5B,GAAIvD,IAAW9T,KAAK4H,MAAM9H,QACtB,OAEJ,MAAM+H,EAAOiM,EAAO2D,QAAQ,2CAC5B,GAAI5P,aAAgBqP,YAAa,CAC7B,MAAM5G,EAAcuD,EAAM6D,UACpBjP,YAACA,GAAezI,KAAK2C,QACrB8N,QAACA,GAAW5I,EACd,WAAY4I,EACZzQ,KAAK8V,oBAAoBrN,EAAaZ,GAC/B,SAAU4I,EACjBzQ,KAAK2X,kBAAkBlP,EAAaZ,EAAMyI,GACnC,WAAYG,GACnBzQ,KAAKkW,oBAAoBzN,EAAaZ,GAG9CgM,EAAMkC,iBAEVlW,cAAaiU,OAACA,IACNA,aAAkBoD,aAAe,WAAYpD,EAAOrD,SACpDzQ,KAAK0N,iBAAiBoG,GAG9BjU,UAASiU,OAACA,IAEN,GADgC9T,KAAKuH,eAAezH,QAAQiX,SAASjD,GAE5D9T,KAAKgJ,SAASzC,UAAavG,KAAKuH,eAAeG,WASzC1H,KAAKqB,qBAAuByS,IAAW9T,KAAK4H,MAAM9H,UAAYE,KAAKgJ,SAASlJ,QAAQiX,SAASjD,IACpG9T,KAAK4J,eATD5J,KAAKkB,eACD/B,SAASuW,gBAAkB1V,KAAK4H,MAAM9H,SACtCE,KAAK4H,MAAMyB,SAGfrJ,KAAKsJ,eACLtJ,KAAKuH,eAAe8B,aAKzB,CACyBrJ,KAAK2C,OAAOkG,uBAAuBpI,OAAS,GAEpET,KAAK4X,iBAET5X,KAAKuH,eAAesQ,mBACpB7X,KAAK4J,cAAa,IAG1B/J,UAASiU,OAACA,IAC0B9T,KAAKuH,eAAezH,QAAQiX,SAASjD,KAKjEjU,CAAClB,EAAUyC,WAAY,KACf0S,IAAW9T,KAAK4H,MAAM9H,SACtBE,KAAKuH,eAAeuQ,iBAG5BjY,CAAClB,EAAU2C,iBAAkB,KACzBtB,KAAKuH,eAAeuQ,gBAChBhE,IAAW9T,KAAK4H,MAAM9H,SACtBE,KAAKsJ,cAAa,IAG1BzJ,CAAClB,EAAU6C,sBAAuB,KAC1BsS,IAAW9T,KAAK4H,MAAM9H,UACtBE,KAAKsJ,cAAa,GAClBtJ,KAAKuH,eAAeuQ,mBAInB9X,KAAKa,cAAcf,QAAQqB,QAE5CtB,SAAQiU,OAACA,IAEL,GAD+B9T,KAAKuH,eAAezH,QAAQiX,SAASjD,KACrC9T,KAAKiD,iBAAkB,CAClD,MAAMwF,YAACA,GAAezI,KAAK2C,OACrBqO,EAAsBvI,EAAYwI,KAAKpJ,GAAQA,EAAK2I,eAEtD3Q,CAAClB,EAAUyC,WAAY,KACf0S,IAAW9T,KAAK4H,MAAM9H,UACtBE,KAAKuH,eAAesQ,mBAChB7G,GACAhR,KAAK4X,iBAET5X,KAAK4J,cAAa,KAG1B/J,CAAClB,EAAU2C,iBAAkB,KACzBtB,KAAKuH,eAAesQ,oBAChB/D,IAAW9T,KAAK4H,MAAM9H,SAAWgU,IAAW9T,KAAKuH,eAAezH,UAAYE,KAAKgD,aACjFhD,KAAK4J,cAAa,IAG1B/J,CAAClB,EAAU6C,sBAAuB,KAC1BsS,IAAW9T,KAAK4H,MAAM9H,UACtBE,KAAKuH,eAAesQ,mBACpB7X,KAAK4J,cAAa,GACdoH,GACAhR,KAAK4X,qBAKT5X,KAAKa,cAAcf,QAAQqB,aAEvCnB,KAAKiD,kBAAmB,EACxBjD,KAAK4H,MAAM9H,QAAQuJ,QAG3BxJ,eACIG,KAAK2C,OAAOwF,SAASnJ,EAAK+Y,QAAQ/X,KAAK4C,gBAE3C/C,iBAAiBmY,EAAK,MAClB,MAAM3T,EAAU8F,MAAM8N,KAAKjY,KAAKgJ,SAASlJ,QAAQoY,iBAAiB,6BAClE,IAAK7T,EAAQ5D,OACT,OAEJ,IAAI0X,EAAWH,EACY7N,MAAM8N,KAAKjY,KAAKgJ,SAASlJ,QAAQoY,qBAAsBlY,KAAKC,OAAOkC,WAAW8T,qBACtFtR,QAAQ0J,IACvBA,EAAO+J,UAAUC,OAAOrY,KAAKC,OAAOkC,WAAW8T,kBAC/C5H,EAAOiK,aAAa,gBAAiB,WAErCH,EACAnY,KAAKkD,mBAAqBmB,EAAQkU,QAAQJ,IAGtCA,EADA9T,EAAQ5D,OAAST,KAAKkD,mBACXmB,EAAQrE,KAAKkD,oBAEbmB,EAAQA,EAAQ5D,OAAS,MAGpC0X,EAAW9T,EAAQ,IAG3B8T,EAASC,UAAUI,IAAIxY,KAAKC,OAAOkC,WAAW8T,kBAC9CkC,EAASG,aAAa,gBAAiB,QACvCtY,KAAKa,cAAcwH,aAAa1J,EAAU2J,OAAOmQ,iBAAmBT,GAAIG,IACpEnY,KAAKgJ,SAASzC,WACdvG,KAAK4H,MAAM8Q,oBAAoBP,EAASpQ,IACxC/H,KAAKuH,eAAemR,oBAAoBP,EAASpQ,KAGzDlI,UAAS2E,MAACA,EAAKM,MAAEA,EAAQ,KAAIkL,SAAEA,GAAW,EAAEhI,QAAEA,GAAU,EAAE3C,iBAAEA,EAAmB,KAAIF,YAAEA,GAAc,EAAKyL,QAAEA,EAAU,OAChH,IAAI+H,EAA+B,iBAAVnU,EAAqBA,EAAMoO,OAASpO,EAC7D,MAAMmM,EAAgBC,EAChBgI,EAAyBvT,GACzBd,MAACA,GAASvE,KAAK2C,OACfkW,EAAc/T,GAAS6T,EACvBG,EAAiB9I,IAAa,EAC9B/H,EAAQD,GAAW,EAAIhI,KAAK2C,OAAOuF,aAAaF,GAAW,KAC3DD,EAAKxD,EAAQA,EAAM9D,OAAS,EAAI,EA4BtC,OA3BIT,KAAKC,OAAO8Y,eACZJ,EAAc3Y,KAAKC,OAAO8Y,aAAeJ,EAAYK,YAErDhZ,KAAKC,OAAOgZ,cACZN,GAAe3Y,KAAKC,OAAOgZ,YAAYD,YAE3ChZ,KAAK2C,OAAOwF,SAASrJ,EAAaoa,SAC9B1U,MAAOmU,EACP7T,MAAO+T,EACP9Q,GAAAA,EACAiI,SAAU8I,EACV9Q,QAAAA,EACA3C,iBAAAA,EACAF,YAAAA,EACAyL,QAASD,KAET3Q,KAAKqB,qBACLrB,KAAKmZ,kBAAkBpR,GAE3B/H,KAAKa,cAAcwH,aAAa1J,EAAU2J,OAAO4Q,SAC7CnR,GAAAA,EACAvD,MAAOmU,EACP7T,MAAO+T,EACPxT,iBAAkBuT,EAClBrQ,WAAYN,GAASA,EAAMzD,MAAQyD,EAAMzD,WAAQoL,EACjDgB,QAASD,IAEN3Q,KAEXH,YAAYgI,GACR,IAAKA,IAAS5I,EAAEma,OAAO,SAAUvR,GAC7B,OAAO7H,KAEX,MAAM+H,GAACA,EAAEvD,MAAEA,EAAKM,MAAEA,EAAKkL,SAAEA,EAAQhI,QAAEA,GAAWH,EACxCI,EAAQD,GAAW,EAAIhI,KAAK2C,OAAOuF,aAAaF,GAAW,KAgBjE,OAfAhI,KAAK2C,OAAOwF,SAASrJ,EAAaua,WAAWtR,EAAIiI,IAC7C/H,GAASA,EAAMzD,MACfxE,KAAKa,cAAcwH,aAAa1J,EAAU2J,OAAO+Q,YAC7CtR,GAAAA,EACAvD,MAAAA,EACAM,MAAAA,EACAyD,WAAYN,EAAMzD,QAGtBxE,KAAKa,cAAcwH,aAAa1J,EAAU2J,OAAO+Q,YAC7CtR,GAAAA,EACAvD,MAAAA,EACAM,MAAAA,IAGD9E,KAEXH,YAAW2E,MAACA,EAAKM,MAAEA,EAAQ,KAAI8G,WAAEA,GAAa,EAAKlE,WAAEA,GAAa,EAAKM,QAAEA,GAAU,EAAE3C,iBAAEA,EAAmB,KAAIF,YAAEA,GAAc,EAAKyL,QAAEA,EAAU,OAC3I,QAAqB,IAAVpM,GAAmC,OAAVA,EAChC,OAEJ,MAAMH,QAACA,GAAWrE,KAAK2C,OACjB2W,EAAcxU,GAASN,EACvBwL,EAAW3L,EAAUA,EAAQ5D,OAAS,EAAI,EAC1C8Y,KAAsBvZ,KAAKsD,WAAatD,KAAK+D,SAASC,cAAgBgM,IAC5EhQ,KAAK2C,OAAOwF,SAAStJ,EAAe2a,WAChCzR,GAAIiI,EACJhI,QAAAA,EACAyR,UAAWF,EACX/U,MAAAA,EACAM,MAAOwU,EACPrU,SAAUyC,EACVrC,iBAAAA,EACAF,YAAAA,EACAyL,QAAAA,KAEAhF,GACA5L,KAAK+P,UACDvL,MAAAA,EACAM,MAAOwU,EACPtJ,SAAAA,EACA3K,iBAAAA,EACAF,YAAAA,EACAyL,QAAAA,IAIZ/Q,WAAUoI,MAACA,EAAKF,GAAEA,EAAE0D,SAAEA,EAAW,QAAOC,SAAEA,EAAW,UACjD,MAAM+C,EAAexP,EAAEma,OAAO,SAAUnR,GAASA,EAAM5D,QAAU8F,MAAM8N,KAAKhQ,EAAMyR,qBAAqB,WACjG1R,EAAUD,GAAM4R,KAAKC,OAAM,IAAIC,MAAOC,UAAYH,KAAKI,UACvDrS,IAAaO,EAAMhD,UAAWgD,EAAMhD,SAC1C,GAAIwJ,EAAc,CACdzO,KAAK2C,OAAOwF,SAASpJ,EAAOib,UACxBxV,MAAOyD,EAAMnD,MACbiD,GAAIC,EACJ+J,QAAQ,EACR9M,SAAUyC,KAEd,MAAMuS,EAAkB5L,IACpB,MAAM6L,EAAgB7L,EAAOpJ,UAAYoJ,EAAOnJ,YAAcmJ,EAAOnJ,WAAWD,SAChFjF,KAAK2L,YACDnH,MAAO6J,EAAO5C,GACd3G,MAAO7F,EAAEma,OAAO,SAAU/K,GAAUA,EAAO3C,GAAY2C,EAAOtJ,UAC9D6G,WAAYyC,EAAOrJ,SACnB0C,WAAYwS,EACZlS,QAAAA,EACA3C,iBAAkBgJ,EAAOhJ,iBACzBF,YAAakJ,EAAOlJ,eAG5BsJ,EAAa9J,QAAQsV,QAErBja,KAAK2C,OAAOwF,SAASpJ,EAAOib,UACxBxV,MAAOyD,EAAMnD,MACbiD,GAAIE,EAAMF,GACVgK,QAAQ,EACR9M,SAAUgD,EAAMhD,YAI5BpF,aAAayC,KAAa6X,GACtB,IAAK7X,EACD,OAAO,KAEX,MAAMH,WAACA,GAAcnC,KAAKC,OAC1B,OAAOD,KAAKwC,WAAWF,GAAU8E,KAAKpH,KAAMmC,KAAegY,GAE/Dta,mBACI,MAAMua,0BAACA,GAA6Bpa,KAAKC,OACzC,IAAIoa,KACAD,GAAkE,mBAA9BA,IACpCC,EAAgBD,EAA0BhT,KAAKpH,KAAMf,EAAEqb,UAE3Dta,KAAKwC,WAAahE,EAAMI,EAAWyb,GAEvCxa,kBACIG,KAAKuH,eAAiB,IAAI7I,EAAW6b,WACjCza,QAASE,KAAK2N,aAAa,iBAAkB3N,KAAKwD,WAAYxD,KAAKyB,iBAAkBzB,KAAKqB,oBAAqBrB,KAAKC,OAAOyB,cAAe1B,KAAKa,cAAcf,QAAQqB,MACrKgB,WAAYnC,KAAKC,OAAOkC,WACxBhB,KAAMnB,KAAKa,cAAcf,QAAQqB,KACjCqZ,SAAUxa,KAAKC,OAAOua,WAE1Bxa,KAAKgX,eAAiB,IAAItY,EAAW6b,WACjCza,QAASE,KAAK2N,aAAa,kBAC3BxL,WAAYnC,KAAKC,OAAOkC,WACxBhB,KAAMnB,KAAKa,cAAcf,QAAQqB,KACjCqZ,SAAUxa,KAAKC,OAAOua,WAE1Bxa,KAAK4H,MAAQ,IAAIlJ,EAAW+b,OACxB3a,QAASE,KAAK2N,aAAa,QAAS3N,KAAKoD,mBACzCjB,WAAYnC,KAAKC,OAAOkC,WACxBhB,KAAMnB,KAAKa,cAAcf,QAAQqB,KACjCuZ,cAAe1a,KAAKC,OAAO0a,QAE/B3a,KAAK8M,WAAa,IAAIpO,EAAWkc,MAAO9a,QAASE,KAAK2N,aAAa,aAAc3N,KAAKqB,uBACtFrB,KAAKgO,SAAW,IAAItP,EAAWkc,MAAO9a,QAASE,KAAK2N,aAAa,WAAY3N,KAAKqB,uBAClFrB,KAAKgJ,SAAW,IAAItK,EAAWmc,UAC3B/a,QAASE,KAAK2N,aAAa,YAC3BxL,WAAYnC,KAAKC,OAAOkC,WACxBhB,KAAMnB,KAAKa,cAAcf,QAAQqB,OAGzCtB,mBACIG,KAAKa,cAAcia,UACnB9a,KAAKgX,eAAe+D,KAAK/a,KAAKa,cAAcf,SAC5CE,KAAKuH,eAAewT,KAAK/a,KAAKgX,eAAelX,SACzCE,KAAKqB,oBACLrB,KAAK4H,MAAMzC,YAAcnF,KAAKC,OAAO+a,wBAA0B,GACxDhb,KAAKoD,oBACZpD,KAAK4H,MAAMzC,YAAcnF,KAAKoD,kBAC9BpD,KAAK4H,MAAMuJ,YAEfnR,KAAKuH,eAAezH,QAAQ6O,YAAY3O,KAAKgX,eAAelX,SAC5DE,KAAKuH,eAAezH,QAAQ6O,YAAY3O,KAAKgJ,SAASlJ,SACtDE,KAAKgX,eAAelX,QAAQ6O,YAAY3O,KAAKgO,SAASlO,SACjDE,KAAKkB,gBACNlB,KAAKgJ,SAASlJ,QAAQ6O,YAAY3O,KAAK8M,WAAWhN,SAEjDE,KAAKqB,oBAECrB,KAAKC,OAAOyB,eACnB1B,KAAKgJ,SAASlJ,QAAQmb,aAAajb,KAAK4H,MAAM9H,QAASE,KAAKgJ,SAASlJ,QAAQob,YAF7Elb,KAAKgX,eAAelX,QAAQ6O,YAAY3O,KAAK4H,MAAM9H,SAInDE,KAAKyB,mBACLzB,KAAKkD,mBAAqB,EAC1BlD,KAAKiM,cAAe,EACpBjM,KAAKqL,gBACDrL,KAAKiE,cAAcxD,OACnBT,KAAKmb,qBAAqBnb,KAAKiE,eAE/BjE,KAAKob,sBAAsBpb,KAAKoE,gBAEpCpE,KAAK6L,gBAEL7L,KAAKkB,gBACLlB,KAAKqb,oBAAoBrb,KAAKsE,cAGtCzE,qBAAqBd,GACjB,MAAM+Q,EAAoB9P,KAAKa,cAAcya,kBACzCxL,GAA8D,WAAzCA,EAAkB5K,WAAWqW,SAClDvb,KAAK2L,YACDnH,MAAOsL,EAAkBtL,MACzBM,MAAOgL,EAAkB/K,UACzB6G,WAAYkE,EAAkB9K,SAC9B0C,WAAYoI,EAAkB7K,SAC9BE,aAAa,IAGrBpG,EAAO4F,QAAQsD,GAASjI,KAAKuL,WACzBtD,MAAAA,EACAF,GAAIE,EAAMF,IAAM,QAGxBlI,sBAAsBwE,GACdrE,KAAKC,OAAOqO,YACZjK,EAAQkK,KAAKvO,KAAKC,OAAOuO,QAE7B,MAAMgN,EAAoBnX,EAAQ4M,KAAK5C,GAAUA,EAAOrJ,UAClDyW,EAA0BpX,EAAQqX,UAAUrN,QAA8BuB,IAApBvB,EAAOpJ,WAA2BoJ,EAAOpJ,UACrGZ,EAAQM,QAAQ,CAAC0J,EAAQsN,KACrB,MAAMnX,MAACA,EAAKM,MAAEA,EAAKO,iBAAEA,EAAgBF,YAAEA,GAAekJ,EACtD,GAAIrO,KAAKyB,iBACL,GAAI4M,EAAOhK,QACPrE,KAAKuL,WACDtD,MAAOoG,EACPtG,GAAIsG,EAAOtG,IAAM,WAElB,CACH,MACM6D,KADkB5L,KAAKqB,sBAAwBma,GAAqBG,IAAUF,IACxCpN,EAAOrJ,SAC7C0C,EAAa2G,EAAOpJ,SAC1BjF,KAAK2L,YACDnH,MAAAA,EACAM,MAAAA,EACA8G,WAAAA,EACAlE,WAAAA,EACArC,iBAAAA,EACAF,YAAAA,SAIRnF,KAAK2L,YACDnH,MAAAA,EACAM,MAAAA,EACA8G,WAAYyC,EAAOrJ,SACnB0C,WAAY2G,EAAOpJ,SACnBI,iBAAAA,EACAF,YAAAA,MAKhBtF,oBAAoB0E,GAChBA,EAAMI,QAAQkD,IACU,iBAATA,GAAqBA,EAAKrD,OACjCxE,KAAK+P,UACDvL,MAAOqD,EAAKrD,MACZM,MAAO+C,EAAK/C,MACZkL,SAAUnI,EAAKE,GACf1C,iBAAkBwC,EAAKxC,iBACvBF,YAAa0C,EAAK1C,cAGN,iBAAT0C,GACP7H,KAAK+P,UAAWvL,MAAOqD,MAInChI,iBAAiBgI,KAGT+T,OAAQ,KACC/T,EAAKrD,QAGLxE,KAAKkB,eAUNlB,KAAK+P,UACDvL,MAAOqD,EAAKrD,MACZM,MAAO+C,EAAK/C,MACZkL,SAAUnI,EAAKE,GACf1C,iBAAkBwC,EAAKxC,iBACvBF,YAAa0C,EAAK1C,cAdtBnF,KAAK2L,YACDnH,MAAOqD,EAAKrD,MACZM,MAAO+C,EAAK/C,MACZ8G,YAAY,EACZlE,YAAY,EACZrC,iBAAkBwC,EAAKxC,iBACvBF,YAAa0C,EAAK1C,gBAY9B0W,OAAQ,KACC7b,KAAKkB,eAQNlB,KAAK+P,UAAWvL,MAAOqD,IAPvB7H,KAAK2L,YACDnH,MAAOqD,EACP/C,MAAO+C,EACP+D,YAAY,EACZlE,YAAY,OA/BXzI,EAAE6c,QAAQjU,GAAMkU,iBAwCrClc,4BAA4BwK,GACxB,MAAMhG,QAACA,GAAWrE,KAAK2C,OACjBqZ,EAAc3X,EAAQ+L,KAAK/B,GAAUrO,KAAKC,OAAOgc,cAAc5N,EAAO7J,MAAO6F,IAC/E2R,IAAgBA,EAAYhX,UAC5BhF,KAAK+P,UACDvL,MAAOwX,EAAYxX,MACnBM,MAAOkX,EAAYlX,MACnBkL,SAAUgM,EAAYjU,GACtBC,QAASgU,EAAYhU,QACrB3C,iBAAkB2W,EAAY3W,iBAC9BF,YAAa6W,EAAY7W,YACzByL,QAASoL,EAAYpL,UAIjC/Q,4BACI,GAAIG,KAAKyB,iBAAkB,CACvB,MAAM6Z,kBAACA,GAAqBtb,KAAKa,cACjC,QAAOya,GAAoBA,EAAkBY,KAEjD,MAAM/W,YAACA,EAAWgX,iBAAEA,GAAoBnc,KAAKC,QAEzCH,SAAS2Q,QAACA,IACVzQ,KAAKa,cACT,GAAIsE,EAAa,CACb,GAAIgX,EACA,OAAOA,EAEX,GAAI1L,EAAQtL,YACR,OAAOsL,EAAQtL,YAGvB,OAAO,GAGf,OAAO5F","file":"../choices.js","sourcesContent":["define([\n    './vendors/fuse',\n    './vendors/deepmerge',\n    './store/store',\n    './components/index',\n    './constants',\n    './templates',\n    './actions/choices',\n    './actions/items',\n    './actions/groups',\n    './actions/misc',\n    './lib/utils'\n], function (Fuse, merge, Store, components, constants, TEMPLATES, actionsChoices, actionsItems, groups, misc, h) {\n    'use strict';\n    const IS_IE11 = '-ms-scroll-limit' in document.documentElement.style && '-ms-ime-align' in document.documentElement.style;\n    const USER_DEFAULTS = {};\n    class Choices {\n        static get defaults() {\n            return Object.preventExtensions({\n                get options() {\n                    return USER_DEFAULTS;\n                },\n                get templates() {\n                    return TEMPLATES;\n                }\n            });\n        }\n        constructor(element = '[data-choice]', userConfig = {}) {\n            this.config = merge.all([\n                constants.DEFAULT_CONFIG,\n                Choices.defaults.options,\n                userConfig\n            ], { arrayMerge: (_, sourceArray) => [...sourceArray] });\n            const invalidConfigOptions = h.diff(this.config, constants.DEFAULT_CONFIG);\n            if (invalidConfigOptions.length) {\n                console.warn('Unknown config option(s) passed', invalidConfigOptions.join(', '));\n            }\n            const passedElement = typeof element === 'string' ? document.querySelector(element) : element;\n            if (!(passedElement instanceof HTMLInputElement || passedElement instanceof HTMLSelectElement)) {\n                throw TypeError('Expected one of the following types text|select-one|select-multiple');\n            }\n            this._isTextElement = passedElement.type === constants.TEXT_TYPE;\n            this._isSelectOneElement = passedElement.type === constants.SELECT_ONE_TYPE;\n            this._isSelectMultipleElement = passedElement.type === constants.SELECT_MULTIPLE_TYPE;\n            this._isSelectElement = this._isSelectOneElement || this._isSelectMultipleElement;\n            this.config.searchEnabled = this._isSelectMultipleElement || this.config.searchEnabled;\n            if (![\n                    'auto',\n                    'always'\n                ].includes(this.config.renderSelectedChoices)) {\n                this.config.renderSelectedChoices = 'auto';\n            }\n            if (userConfig.addItemFilter && typeof userConfig.addItemFilter !== 'function') {\n                const re = userConfig.addItemFilter instanceof RegExp ? userConfig.addItemFilter : new RegExp(userConfig.addItemFilter);\n                this.config.addItemFilter = re.test.bind(re);\n            }\n            if (this._isTextElement) {\n                this.passedElement = new components.WrappedInput({\n                    element: passedElement,\n                    classNames: this.config.classNames,\n                    delimiter: this.config.delimiter\n                });\n            } else {\n                this.passedElement = new components.WrappedSelect({\n                    element: passedElement,\n                    classNames: this.config.classNames,\n                    template: data => this._templates.option(data)\n                });\n            }\n            this.initialised = false;\n            this._store = new Store();\n            this._initialState = {};\n            this._currentState = {};\n            this._prevState = {};\n            this._currentValue = '';\n            this._canSearch = this.config.searchEnabled;\n            this._isScrollingOnIe = false;\n            this._highlightPosition = 0;\n            this._wasTap = true;\n            this._placeholderValue = this._generatePlaceholderValue();\n            this._baseId = h.generateId(this.passedElement.element, 'choices-');\n            this._direction = this.passedElement.dir;\n            if (!this._direction) {\n                const {direction: elementDirection} = window.getComputedStyle(this.passedElement.element);\n                const {direction: documentDirection} = window.getComputedStyle(document.documentElement);\n                if (elementDirection !== documentDirection) {\n                    this._direction = elementDirection;\n                }\n            }\n            this._idNames = { itemChoice: 'item-choice' };\n            this._presetGroups = this.passedElement.optionGroups;\n            this._presetOptions = this.passedElement.options;\n            this._presetChoices = this.config.choices;\n            this._presetItems = this.config.items;\n            if (this.passedElement.value) {\n                this._presetItems = this._presetItems.concat(this.passedElement.value.split(this.config.delimiter));\n            }\n            if (this.passedElement.options) {\n                this.passedElement.options.forEach(o => {\n                    this._presetChoices.push({\n                        value: o.value,\n                        label: o.innerHTML,\n                        selected: o.selected,\n                        disabled: o.disabled || o.parentNode.disabled,\n                        placeholder: o.value === '' || o.hasAttribute('placeholder'),\n                        customProperties: o.getAttribute('data-custom-properties')\n                    });\n                });\n            }\n            this._render = this._render.bind(this);\n            this._onFocus = this._onFocus.bind(this);\n            this._onBlur = this._onBlur.bind(this);\n            this._onKeyUp = this._onKeyUp.bind(this);\n            this._onKeyDown = this._onKeyDown.bind(this);\n            this._onClick = this._onClick.bind(this);\n            this._onTouchMove = this._onTouchMove.bind(this);\n            this._onTouchEnd = this._onTouchEnd.bind(this);\n            this._onMouseDown = this._onMouseDown.bind(this);\n            this._onMouseOver = this._onMouseOver.bind(this);\n            this._onFormReset = this._onFormReset.bind(this);\n            this._onAKey = this._onAKey.bind(this);\n            this._onEnterKey = this._onEnterKey.bind(this);\n            this._onEscapeKey = this._onEscapeKey.bind(this);\n            this._onDirectionKey = this._onDirectionKey.bind(this);\n            this._onDeleteKey = this._onDeleteKey.bind(this);\n            if (this.passedElement.isActive) {\n                if (!this.config.silent) {\n                    console.warn('Trying to initialise Choices on element already initialised');\n                }\n                this.initialised = true;\n                return;\n            }\n            this.init();\n        }\n        init() {\n            if (this.initialised) {\n                return;\n            }\n            this._createTemplates();\n            this._createElements();\n            this._createStructure();\n            this._initialState = h.cloneObject(this._store.state);\n            this._store.subscribe(this._render);\n            this._render();\n            this._addEventListeners();\n            const shouldDisable = !this.config.addItems || this.passedElement.element.hasAttribute('disabled');\n            if (shouldDisable) {\n                this.disable();\n            }\n            this.initialised = true;\n            const {callbackOnInit} = this.config;\n            if (callbackOnInit && typeof callbackOnInit === 'function') {\n                callbackOnInit.call(this);\n            }\n        }\n        destroy() {\n            if (!this.initialised) {\n                return;\n            }\n            this._removeEventListeners();\n            this.passedElement.reveal();\n            this.containerOuter.unwrap(this.passedElement.element);\n            this.clearStore();\n            if (this._isSelectElement) {\n                this.passedElement.options = this._presetOptions;\n            }\n            this._templates = null;\n            this.initialised = false;\n        }\n        enable() {\n            if (this.passedElement.isDisabled) {\n                this.passedElement.enable();\n            }\n            if (this.containerOuter.isDisabled) {\n                this._addEventListeners();\n                this.input.enable();\n                this.containerOuter.enable();\n            }\n            return this;\n        }\n        disable() {\n            if (!this.passedElement.isDisabled) {\n                this.passedElement.disable();\n            }\n            if (!this.containerOuter.isDisabled) {\n                this._removeEventListeners();\n                this.input.disable();\n                this.containerOuter.disable();\n            }\n            return this;\n        }\n        highlightItem(item, runEvent = true) {\n            if (!item) {\n                return this;\n            }\n            const {id, groupId = -1, value = '', label = ''} = item;\n            const group = groupId >= 0 ? this._store.getGroupById(groupId) : null;\n            this._store.dispatch(actionsItems.highlightItem(id, true));\n            if (runEvent) {\n                this.passedElement.triggerEvent(constants.EVENTS.highlightItem, {\n                    id,\n                    value,\n                    label,\n                    groupValue: group && group.value ? group.value : null\n                });\n            }\n            return this;\n        }\n        unhighlightItem(item) {\n            if (!item) {\n                return this;\n            }\n            const {id, groupId = -1, value = '', label = ''} = item;\n            const group = groupId >= 0 ? this._store.getGroupById(groupId) : null;\n            this._store.dispatch(actionsItems.highlightItem(id, false));\n            this.passedElement.triggerEvent(constants.EVENTS.highlightItem, {\n                id,\n                value,\n                label,\n                groupValue: group && group.value ? group.value : null\n            });\n            return this;\n        }\n        highlightAll() {\n            this._store.items.forEach(item => this.highlightItem(item));\n            return this;\n        }\n        unhighlightAll() {\n            this._store.items.forEach(item => this.unhighlightItem(item));\n            return this;\n        }\n        removeActiveItemsByValue(value) {\n            this._store.activeItems.filter(item => item.value === value).forEach(item => this._removeItem(item));\n            return this;\n        }\n        removeActiveItems(excludedId) {\n            this._store.activeItems.filter(({id}) => id !== excludedId).forEach(item => this._removeItem(item));\n            return this;\n        }\n        removeHighlightedItems(runEvent = false) {\n            this._store.highlightedActiveItems.forEach(item => {\n                this._removeItem(item);\n                if (runEvent) {\n                    this._triggerChange(item.value);\n                }\n            });\n            return this;\n        }\n        showDropdown(preventInputFocus) {\n            if (this.dropdown.isActive) {\n                return this;\n            }\n            requestAnimationFrame(() => {\n                this.dropdown.show();\n                this.containerOuter.open(this.dropdown.distanceFromTopWindow);\n                if (!preventInputFocus && this._canSearch) {\n                    this.input.focus();\n                }\n                this.passedElement.triggerEvent(constants.EVENTS.showDropdown, {});\n            });\n            return this;\n        }\n        hideDropdown(preventInputBlur) {\n            if (!this.dropdown.isActive) {\n                return this;\n            }\n            requestAnimationFrame(() => {\n                this.dropdown.hide();\n                this.containerOuter.close();\n                if (!preventInputBlur && this._canSearch) {\n                    this.input.removeActiveDescendant();\n                    this.input.blur();\n                }\n                this.passedElement.triggerEvent(constants.EVENTS.hideDropdown, {});\n            });\n            return this;\n        }\n        getValue(valueOnly = false) {\n            const values = this._store.activeItems.reduce((selectedItems, item) => {\n                const itemValue = valueOnly ? item.value : item;\n                selectedItems.push(itemValue);\n                return selectedItems;\n            }, []);\n            return this._isSelectOneElement ? values[0] : values;\n        }\n        setValue(items) {\n            if (!this.initialised) {\n                return this;\n            }\n            items.forEach(value => this._setChoiceOrItem(value));\n            return this;\n        }\n        setChoiceByValue(value) {\n            if (!this.initialised || this._isTextElement) {\n                return this;\n            }\n            const choiceValue = Array.isArray(value) ? value : [value];\n            choiceValue.forEach(val => this._findAndSelectChoiceByValue(val));\n            return this;\n        }\n        setChoices(choicesArrayOrFetcher = [], value = 'value', label = 'label', replaceChoices = false) {\n            if (!this.initialised) {\n                throw new ReferenceError(`setChoices was called on a non-initialized instance of Choices`);\n            }\n            if (!this._isSelectElement) {\n                throw new TypeError(`setChoices can't be used with INPUT based Choices`);\n            }\n            if (typeof value !== 'string' || !value) {\n                throw new TypeError(`value parameter must be a name of 'value' field in passed objects`);\n            }\n            if (replaceChoices) {\n                this.clearChoices();\n            }\n            if (typeof choicesArrayOrFetcher === 'function') {\n                const fetcher = choicesArrayOrFetcher(this);\n                if (typeof Promise === 'function' && fetcher instanceof Promise) {\n                    return new Promise(resolve => requestAnimationFrame(resolve)).then(() => this._handleLoadingState(true)).then(() => fetcher).then(data => this.setChoices(data, value, label, replaceChoices)).catch(err => {\n                        if (!this.config.silent) {\n                            console.error(err);\n                        }\n                    }).then(() => this._handleLoadingState(false)).then(() => this);\n                }\n                if (!Array.isArray(fetcher)) {\n                    throw new TypeError(`.setChoices first argument function must return either array of choices or Promise, got: ${ typeof fetcher }`);\n                }\n                return this.setChoices(fetcher, value, label, false);\n            }\n            if (!Array.isArray(choicesArrayOrFetcher)) {\n                throw new TypeError(`.setChoices must be called either with array of choices with a function resulting into Promise of array of choices`);\n            }\n            this.containerOuter.removeLoadingState();\n            this._startLoading();\n            choicesArrayOrFetcher.forEach(groupOrChoice => {\n                if (groupOrChoice.choices) {\n                    this._addGroup({\n                        id: parseInt(groupOrChoice.id, 10) || null,\n                        group: groupOrChoice,\n                        valueKey: value,\n                        labelKey: label\n                    });\n                } else {\n                    this._addChoice({\n                        value: groupOrChoice[value],\n                        label: groupOrChoice[label],\n                        isSelected: groupOrChoice.selected,\n                        isDisabled: groupOrChoice.disabled,\n                        customProperties: groupOrChoice.customProperties,\n                        placeholder: groupOrChoice.placeholder\n                    });\n                }\n            });\n            this._stopLoading();\n            return this;\n        }\n        clearChoices() {\n            this._store.dispatch(actionsChoices.clearChoices());\n            return this;\n        }\n        clearStore() {\n            this._store.dispatch(misc.clearAll());\n            return this;\n        }\n        clearInput() {\n            const shouldSetInputWidth = !this._isSelectOneElement;\n            this.input.clear(shouldSetInputWidth);\n            if (!this._isTextElement && this._canSearch) {\n                this._isSearching = false;\n                this._store.dispatch(d.activateChoices(true));\n            }\n            return this;\n        }\n        _render() {\n            if (this._store.isLoading()) {\n                return;\n            }\n            this._currentState = this._store.state;\n            const stateChanged = this._currentState.choices !== this._prevState.choices || this._currentState.groups !== this._prevState.groups || this._currentState.items !== this._prevState.items;\n            const shouldRenderChoices = this._isSelectElement;\n            const shouldRenderItems = this._currentState.items !== this._prevState.items;\n            if (!stateChanged) {\n                return;\n            }\n            if (shouldRenderChoices) {\n                this._renderChoices();\n            }\n            if (shouldRenderItems) {\n                this._renderItems();\n            }\n            this._prevState = this._currentState;\n        }\n        _renderChoices() {\n            const {activeGroups, activeChoices} = this._store;\n            let choiceListFragment = document.createDocumentFragment();\n            this.choiceList.clear();\n            if (this.config.resetScrollPosition) {\n                requestAnimationFrame(() => this.choiceList.scrollToTop());\n            }\n            if (activeGroups.length >= 1 && !this._isSearching) {\n                const activePlaceholders = activeChoices.filter(activeChoice => activeChoice.placeholder === true && activeChoice.groupId === -1);\n                if (activePlaceholders.length >= 1) {\n                    choiceListFragment = this._createChoicesFragment(activePlaceholders, choiceListFragment);\n                }\n                choiceListFragment = this._createGroupsFragment(activeGroups, activeChoices, choiceListFragment);\n            } else if (activeChoices.length >= 1) {\n                choiceListFragment = this._createChoicesFragment(activeChoices, choiceListFragment);\n            }\n            if (choiceListFragment.childNodes && choiceListFragment.childNodes.length > 0) {\n                const {activeItems} = this._store;\n                const canAddItem = this._canAddItem(activeItems, this.input.value);\n                if (canAddItem.response) {\n                    this.choiceList.append(choiceListFragment);\n                    this._highlightChoice();\n                } else {\n                    this.choiceList.append(this._getTemplate('notice', canAddItem.notice));\n                }\n            } else {\n                let dropdownItem;\n                let notice;\n                if (this._isSearching) {\n                    notice = typeof this.config.noResultsText === 'function' ? this.config.noResultsText() : this.config.noResultsText;\n                    dropdownItem = this._getTemplate('notice', notice, 'no-results');\n                } else {\n                    notice = typeof this.config.noChoicesText === 'function' ? this.config.noChoicesText() : this.config.noChoicesText;\n                    dropdownItem = this._getTemplate('notice', notice, 'no-choices');\n                }\n                this.choiceList.append(dropdownItem);\n            }\n        }\n        _renderItems() {\n            const activeItems = this._store.activeItems || [];\n            this.itemList.clear();\n            const itemListFragment = this._createItemsFragment(activeItems);\n            if (itemListFragment.childNodes) {\n                this.itemList.append(itemListFragment);\n            }\n        }\n        _createGroupsFragment(groups, choices, fragment = document.createDocumentFragment()) {\n            const getGroupChoices = group => choices.filter(choice => {\n                if (this._isSelectOneElement) {\n                    return choice.groupId === group.id;\n                }\n                return choice.groupId === group.id && (this.config.renderSelectedChoices === 'always' || !choice.selected);\n            });\n            if (this.config.shouldSort) {\n                groups.sort(this.config.sorter);\n            }\n            groups.forEach(group => {\n                const groupChoices = getGroupChoices(group);\n                if (groupChoices.length >= 1) {\n                    const dropdownGroup = this._getTemplate('choiceGroup', group);\n                    fragment.appendChild(dropdownGroup);\n                    this._createChoicesFragment(groupChoices, fragment, true);\n                }\n            });\n            return fragment;\n        }\n        _createChoicesFragment(choices, fragment = document.createDocumentFragment(), withinGroup = false) {\n            const {renderSelectedChoices, searchResultLimit, renderChoiceLimit} = this.config;\n            const filter = this._isSearching ? h.sortByScore : this.config.sorter;\n            const appendChoice = choice => {\n                const shouldRender = renderSelectedChoices === 'auto' ? this._isSelectOneElement || !choice.selected : true;\n                if (shouldRender) {\n                    const dropdownItem = this._getTemplate('choice', choice, this.config.itemSelectText);\n                    fragment.appendChild(dropdownItem);\n                }\n            };\n            let rendererableChoices = choices;\n            if (renderSelectedChoices === 'auto' && !this._isSelectOneElement) {\n                rendererableChoices = choices.filter(choice => !choice.selected);\n            }\n            const {placeholderChoices, normalChoices} = rendererableChoices.reduce((acc, choice) => {\n                if (choice.placeholder) {\n                    acc.placeholderChoices.push(choice);\n                } else {\n                    acc.normalChoices.push(choice);\n                }\n                return acc;\n            }, {\n                placeholderChoices: [],\n                normalChoices: []\n            });\n            if (this.config.shouldSort || this._isSearching) {\n                normalChoices.sort(filter);\n            }\n            let choiceLimit = rendererableChoices.length;\n            const sortedChoices = this._isSelectOneElement ? [\n                ...placeholderChoices,\n                ...normalChoices\n            ] : normalChoices;\n            if (this._isSearching) {\n                choiceLimit = searchResultLimit;\n            } else if (renderChoiceLimit && renderChoiceLimit > 0 && !withinGroup) {\n                choiceLimit = renderChoiceLimit;\n            }\n            for (let i = 0; i < choiceLimit; i += 1) {\n                if (sortedChoices[i]) {\n                    appendChoice(sortedChoices[i]);\n                }\n            }\n            return fragment;\n        }\n        _createItemsFragment(items, fragment = document.createDocumentFragment()) {\n            const {shouldSortItems, sorter, removeItemButton} = this.config;\n            if (shouldSortItems && !this._isSelectOneElement) {\n                items.sort(sorter);\n            }\n            if (this._isTextElement) {\n                this.passedElement.value = items;\n            } else {\n                this.passedElement.options = items;\n            }\n            const addItemToFragment = item => {\n                const listItem = this._getTemplate('item', item, removeItemButton);\n                fragment.appendChild(listItem);\n            };\n            items.forEach(addItemToFragment);\n            return fragment;\n        }\n        _triggerChange(value) {\n            if (value === undefined || value === null) {\n                return;\n            }\n            this.passedElement.triggerEvent(constants.EVENTS.change, { value });\n        }\n        _selectPlaceholderChoice() {\n            const {placeholderChoice} = this._store;\n            if (placeholderChoice) {\n                this._addItem({\n                    value: placeholderChoice.value,\n                    label: placeholderChoice.label,\n                    choiceId: placeholderChoice.id,\n                    groupId: placeholderChoice.groupId,\n                    placeholder: placeholderChoice.placeholder\n                });\n                this._triggerChange(placeholderChoice.value);\n            }\n        }\n        _handleButtonAction(activeItems, element) {\n            if (!activeItems || !element || !this.config.removeItems || !this.config.removeItemButton) {\n                return;\n            }\n            const itemId = element.parentNode.getAttribute('data-id');\n            const itemToRemove = activeItems.find(item => item.id === parseInt(itemId, 10));\n            this._removeItem(itemToRemove);\n            this._triggerChange(itemToRemove.value);\n            if (this._isSelectOneElement) {\n                this._selectPlaceholderChoice();\n            }\n        }\n        _handleItemAction(activeItems, element, hasShiftKey = false) {\n            if (!activeItems || !element || !this.config.removeItems || this._isSelectOneElement) {\n                return;\n            }\n            const passedId = element.getAttribute('data-id');\n            activeItems.forEach(item => {\n                if (item.id === parseInt(passedId, 10) && !item.highlighted) {\n                    this.highlightItem(item);\n                } else if (!hasShiftKey && item.highlighted) {\n                    this.unhighlightItem(item);\n                }\n            });\n            this.input.focus();\n        }\n        _handleChoiceAction(activeItems, element) {\n            if (!activeItems || !element) {\n                return;\n            }\n            const {id} = element.dataset;\n            const choice = this._store.getChoiceById(id);\n            if (!choice) {\n                return;\n            }\n            const passedKeyCode = activeItems[0] && activeItems[0].keyCode ? activeItems[0].keyCode : null;\n            const hasActiveDropdown = this.dropdown.isActive;\n            choice.keyCode = passedKeyCode;\n            this.passedElement.triggerEvent(constants.EVENTS.choice, { choice });\n            if (!choice.selected && !choice.disabled) {\n                const canAddItem = this._canAddItem(activeItems, choice.value);\n                if (canAddItem.response) {\n                    this._addItem({\n                        value: choice.value,\n                        label: choice.label,\n                        choiceId: choice.id,\n                        groupId: choice.groupId,\n                        customProperties: choice.customProperties,\n                        placeholder: choice.placeholder,\n                        keyCode: choice.keyCode\n                    });\n                    this._triggerChange(choice.value);\n                }\n            }\n            this.clearInput();\n            if (hasActiveDropdown && this._isSelectOneElement) {\n                this.hideDropdown(true);\n                this.containerOuter.focus();\n            }\n        }\n        _handleBackspace(activeItems) {\n            if (!this.config.removeItems || !activeItems) {\n                return;\n            }\n            const lastItem = activeItems[activeItems.length - 1];\n            const hasHighlightedItems = activeItems.some(item => item.highlighted);\n            if (this.config.editItems && !hasHighlightedItems && lastItem) {\n                this.input.value = lastItem.value;\n                this.input.setWidth();\n                this._removeItem(lastItem);\n                this._triggerChange(lastItem.value);\n            } else {\n                if (!hasHighlightedItems) {\n                    this.highlightItem(lastItem, false);\n                }\n                this.removeHighlightedItems(true);\n            }\n        }\n        _startLoading() {\n            this._store.dispatch(misc.setIsLoading(true));\n        }\n        _stopLoading() {\n            this._store.dispatch(misc.setIsLoading(false));\n        }\n        _handleLoadingState(setLoading = true) {\n            let placeholderItem = this.itemList.getChild(`.${ this.config.classNames.placeholder }`);\n            if (setLoading) {\n                this.disable();\n                this.containerOuter.addLoadingState();\n                if (this._isSelectOneElement) {\n                    if (!placeholderItem) {\n                        placeholderItem = this._getTemplate('placeholder', this.config.loadingText);\n                        this.itemList.append(placeholderItem);\n                    } else {\n                        placeholderItem.innerHTML = this.config.loadingText;\n                    }\n                } else {\n                    this.input.placeholder = this.config.loadingText;\n                }\n            } else {\n                this.enable();\n                this.containerOuter.removeLoadingState();\n                if (this._isSelectOneElement) {\n                    placeholderItem.innerHTML = this._placeholderValue || '';\n                } else {\n                    this.input.placeholder = this._placeholderValue || '';\n                }\n            }\n        }\n        _handleSearch(value) {\n            if (!value || !this.input.isFocussed) {\n                return;\n            }\n            const {choices} = this._store;\n            const {searchFloor, searchChoices} = this.config;\n            const hasUnactiveChoices = choices.some(option => !option.active);\n            if (value && value.length >= searchFloor) {\n                const resultCount = searchChoices ? this._searchChoices(value) : 0;\n                this.passedElement.triggerEvent(constants.EVENTS.search, {\n                    value,\n                    resultCount\n                });\n            } else if (hasUnactiveChoices) {\n                this._isSearching = false;\n                this._store.dispatch(d.activateChoices(true));\n            }\n        }\n        _canAddItem(activeItems, value) {\n            let canAddItem = true;\n            let notice = typeof this.config.addItemText === 'function' ? this.config.addItemText(value) : this.config.addItemText;\n            if (!this._isSelectOneElement) {\n                const isDuplicateValue = h.existsInArray(activeItems, value);\n                if (this.config.maxItemCount > 0 && this.config.maxItemCount <= activeItems.length) {\n                    canAddItem = false;\n                    notice = typeof this.config.maxItemText === 'function' ? this.config.maxItemText(this.config.maxItemCount) : this.config.maxItemText;\n                }\n                if (!this.config.duplicateItemsAllowed && isDuplicateValue && canAddItem) {\n                    canAddItem = false;\n                    notice = typeof this.config.uniqueItemText === 'function' ? this.config.uniqueItemText(value) : this.config.uniqueItemText;\n                }\n                if (this._isTextElement && this.config.addItems && canAddItem && typeof this.config.addItemFilter === 'function' && !this.config.addItemFilter(value)) {\n                    canAddItem = false;\n                    notice = typeof this.config.customAddItemText === 'function' ? this.config.customAddItemText(value) : this.config.customAddItemText;\n                }\n            }\n            return {\n                response: canAddItem,\n                notice\n            };\n        }\n        _searchChoices(value) {\n            const newValue = typeof value === 'string' ? value.trim() : value;\n            const currentValue = typeof this._currentValue === 'string' ? this._currentValue.trim() : this._currentValue;\n            if (newValue.length < 1 && newValue === `${ currentValue } `) {\n                return 0;\n            }\n            const haystack = this._store.searchableChoices;\n            const needle = newValue;\n            const keys = [...this.config.searchFields];\n            const options = Object.assign(this.config.fuseOptions, { keys });\n            const fuse = new Fuse(haystack, options);\n            const results = fuse.search(needle);\n            this._currentValue = newValue;\n            this._highlightPosition = 0;\n            this._isSearching = true;\n            this._store.dispatch(actionsChoices.filterChoices(results));\n            return results.length;\n        }\n        _addEventListeners() {\n            const {documentElement} = document;\n            documentElement.addEventListener('touchend', this._onTouchEnd, true);\n            this.containerOuter.element.addEventListener('keydown', this._onKeyDown, true);\n            this.containerOuter.element.addEventListener('mousedown', this._onMouseDown, true);\n            documentElement.addEventListener('click', this._onClick, { passive: true });\n            documentElement.addEventListener('touchmove', this._onTouchMove, { passive: true });\n            this.dropdown.element.addEventListener('mouseover', this._onMouseOver, { passive: true });\n            if (this._isSelectOneElement) {\n                this.containerOuter.element.addEventListener('focus', this._onFocus, { passive: true });\n                this.containerOuter.element.addEventListener('blur', this._onBlur, { passive: true });\n            }\n            this.input.element.addEventListener('keyup', this._onKeyUp, { passive: true });\n            this.input.element.addEventListener('focus', this._onFocus, { passive: true });\n            this.input.element.addEventListener('blur', this._onBlur, { passive: true });\n            if (this.input.element.form) {\n                this.input.element.form.addEventListener('reset', this._onFormReset, { passive: true });\n            }\n            this.input.addEventListeners();\n        }\n        _removeEventListeners() {\n            const {documentElement} = document;\n            documentElement.removeEventListener('touchend', this._onTouchEnd, true);\n            this.containerOuter.element.removeEventListener('keydown', this._onKeyDown, true);\n            this.containerOuter.element.removeEventListener('mousedown', this._onMouseDown, true);\n            documentElement.removeEventListener('click', this._onClick);\n            documentElement.removeEventListener('touchmove', this._onTouchMove);\n            this.dropdown.element.removeEventListener('mouseover', this._onMouseOver);\n            if (this._isSelectOneElement) {\n                this.containerOuter.element.removeEventListener('focus', this._onFocus);\n                this.containerOuter.element.removeEventListener('blur', this._onBlur);\n            }\n            this.input.element.removeEventListener('keyup', this._onKeyUp);\n            this.input.element.removeEventListener('focus', this._onFocus);\n            this.input.element.removeEventListener('blur', this._onBlur);\n            if (this.input.element.form) {\n                this.input.element.form.removeEventListener('reset', this._onFormReset);\n            }\n            this.input.removeEventListeners();\n        }\n        _onKeyDown(event) {\n            const {target, keyCode, ctrlKey, metaKey} = event;\n            const {activeItems} = this._store;\n            const hasFocusedInput = this.input.isFocussed;\n            const hasActiveDropdown = this.dropdown.isActive;\n            const hasItems = this.itemList.hasChildren();\n            const keyString = String.fromCharCode(keyCode);\n            const {BACK_KEY, DELETE_KEY, ENTER_KEY, A_KEY, ESC_KEY, UP_KEY, DOWN_KEY, PAGE_UP_KEY, PAGE_DOWN_KEY} = constants.KEY_CODES;\n            const hasCtrlDownKeyPressed = ctrlKey || metaKey;\n            if (!this._isTextElement && /[a-zA-Z0-9-_ ]/.test(keyString)) {\n                this.showDropdown();\n            }\n            const keyDownActions = {\n                [A_KEY]: this._onAKey,\n                [ENTER_KEY]: this._onEnterKey,\n                [ESC_KEY]: this._onEscapeKey,\n                [UP_KEY]: this._onDirectionKey,\n                [PAGE_UP_KEY]: this._onDirectionKey,\n                [DOWN_KEY]: this._onDirectionKey,\n                [PAGE_DOWN_KEY]: this._onDirectionKey,\n                [DELETE_KEY]: this._onDeleteKey,\n                [BACK_KEY]: this._onDeleteKey\n            };\n            if (keyDownActions[keyCode]) {\n                keyDownActions[keyCode]({\n                    event,\n                    target,\n                    keyCode,\n                    metaKey,\n                    activeItems,\n                    hasFocusedInput,\n                    hasActiveDropdown,\n                    hasItems,\n                    hasCtrlDownKeyPressed\n                });\n            }\n        }\n        _onKeyUp({target, keyCode}) {\n            const {value} = this.input;\n            const {activeItems} = this._store;\n            const canAddItem = this._canAddItem(activeItems, value);\n            const {\n                BACK_KEY: backKey,\n                DELETE_KEY: deleteKey\n            } = constants.KEY_CODES;\n            if (this._isTextElement) {\n                const canShowDropdownNotice = canAddItem.notice && value;\n                if (canShowDropdownNotice) {\n                    const dropdownItem = this._getTemplate('notice', canAddItem.notice);\n                    this.dropdown.element.innerHTML = dropdownItem.outerHTML;\n                    this.showDropdown(true);\n                } else {\n                    this.hideDropdown(true);\n                }\n            } else {\n                const userHasRemovedValue = (keyCode === backKey || keyCode === deleteKey) && !target.value;\n                const canReactivateChoices = !this._isTextElement && this._isSearching;\n                const canSearch = this._canSearch && canAddItem.response;\n                if (userHasRemovedValue && canReactivateChoices) {\n                    this._isSearching = false;\n                    this._store.dispatch(actionsChoices.activateChoices(true));\n                } else if (canSearch) {\n                    this._handleSearch(this.input.value);\n                }\n            }\n            this._canSearch = this.config.searchEnabled;\n        }\n        _onAKey({hasItems, hasCtrlDownKeyPressed}) {\n            if (hasCtrlDownKeyPressed && hasItems) {\n                this._canSearch = false;\n                const shouldHightlightAll = this.config.removeItems && !this.input.value && this.input.element === document.activeElement;\n                if (shouldHightlightAll) {\n                    this.highlightAll();\n                }\n            }\n        }\n        _onEnterKey({event, target, activeItems, hasActiveDropdown}) {\n            const {ENTER_KEY: enterKey} = constants.KEY_CODES;\n            const targetWasButton = target.hasAttribute('data-button');\n            if (this._isTextElement && target.value) {\n                const {value} = this.input;\n                const canAddItem = this._canAddItem(activeItems, value);\n                if (canAddItem.response) {\n                    this.hideDropdown(true);\n                    this._addItem({ value });\n                    this._triggerChange(value);\n                    this.clearInput();\n                }\n            }\n            if (targetWasButton) {\n                this._handleButtonAction(activeItems, target);\n                event.preventDefault();\n            }\n            if (hasActiveDropdown) {\n                const highlightedChoice = this.dropdown.getChild(`.${ this.config.classNames.highlightedState }`);\n                if (highlightedChoice) {\n                    if (activeItems[0]) {\n                        activeItems[0].keyCode = enterKey;\n                    }\n                    this._handleChoiceAction(activeItems, highlightedChoice);\n                }\n                event.preventDefault();\n            } else if (this._isSelectOneElement) {\n                this.showDropdown();\n                event.preventDefault();\n            }\n        }\n        _onEscapeKey({hasActiveDropdown}) {\n            if (hasActiveDropdown) {\n                this.hideDropdown(true);\n                this.containerOuter.focus();\n            }\n        }\n        _onDirectionKey({event, hasActiveDropdown, keyCode, metaKey}) {\n            const {\n                DOWN_KEY: downKey,\n                PAGE_UP_KEY: pageUpKey,\n                PAGE_DOWN_KEY: pageDownKey\n            } = constants.KEY_CODES;\n            if (hasActiveDropdown || this._isSelectOneElement) {\n                this.showDropdown();\n                this._canSearch = false;\n                const directionInt = keyCode === downKey || keyCode === pageDownKey ? 1 : -1;\n                const skipKey = metaKey || keyCode === pageDownKey || keyCode === pageUpKey;\n                const selectableChoiceIdentifier = '[data-choice-selectable]';\n                let nextEl;\n                if (skipKey) {\n                    if (directionInt > 0) {\n                        nextEl = this.dropdown.element.querySelector(`${ selectableChoiceIdentifier }:last-of-type`);\n                    } else {\n                        nextEl = this.dropdown.element.querySelector(selectableChoiceIdentifier);\n                    }\n                } else {\n                    const currentEl = this.dropdown.element.querySelector(`.${ this.config.classNames.highlightedState }`);\n                    if (currentEl) {\n                        nextEl = h.getAdjacentEl(currentEl, selectableChoiceIdentifier, directionInt);\n                    } else {\n                        nextEl = this.dropdown.element.querySelector(selectableChoiceIdentifier);\n                    }\n                }\n                if (nextEl) {\n                    if (!h.isScrolledIntoView(nextEl, this.choiceList.element, directionInt)) {\n                        this.choiceList.scrollToChildElement(nextEl, directionInt);\n                    }\n                    this._highlightChoice(nextEl);\n                }\n                event.preventDefault();\n            }\n        }\n        _onDeleteKey({event, target, hasFocusedInput, activeItems}) {\n            if (hasFocusedInput && !target.value && !this._isSelectOneElement) {\n                this._handleBackspace(activeItems);\n                event.preventDefault();\n            }\n        }\n        _onTouchMove() {\n            if (this._wasTap) {\n                this._wasTap = false;\n            }\n        }\n        _onTouchEnd(event) {\n            const {target} = event || event.touches[0];\n            const touchWasWithinContainer = this._wasTap && this.containerOuter.element.contains(target);\n            if (touchWasWithinContainer) {\n                const containerWasExactTarget = target === this.containerOuter.element || target === this.containerInner.element;\n                if (containerWasExactTarget) {\n                    if (this._isTextElement) {\n                        this.input.focus();\n                    } else if (this._isSelectMultipleElement) {\n                        this.showDropdown();\n                    }\n                }\n                event.stopPropagation();\n            }\n            this._wasTap = true;\n        }\n        _onMouseDown(event) {\n            const {target} = event;\n            if (!(target instanceof HTMLElement)) {\n                return;\n            }\n            if (IS_IE11 && this.choiceList.element.contains(target)) {\n                const firstChoice = this.choiceList.element.firstElementChild;\n                const isOnScrollbar = this._direction === 'ltr' ? event.offsetX >= firstChoice.offsetWidth : event.offsetX < firstChoice.offsetLeft;\n                this._isScrollingOnIe = isOnScrollbar;\n            }\n            if (target === this.input.element) {\n                return;\n            }\n            const item = target.closest('[data-button],[data-item],[data-choice]');\n            if (item instanceof HTMLElement) {\n                const hasShiftKey = event.shiftKey;\n                const {activeItems} = this._store;\n                const {dataset} = item;\n                if ('button' in dataset) {\n                    this._handleButtonAction(activeItems, item);\n                } else if ('item' in dataset) {\n                    this._handleItemAction(activeItems, item, hasShiftKey);\n                } else if ('choice' in dataset) {\n                    this._handleChoiceAction(activeItems, item);\n                }\n            }\n            event.preventDefault();\n        }\n        _onMouseOver({target}) {\n            if (target instanceof HTMLElement && 'choice' in target.dataset) {\n                this._highlightChoice(target);\n            }\n        }\n        _onClick({target}) {\n            const clickWasWithinContainer = this.containerOuter.element.contains(target);\n            if (clickWasWithinContainer) {\n                if (!this.dropdown.isActive && !this.containerOuter.isDisabled) {\n                    if (this._isTextElement) {\n                        if (document.activeElement !== this.input.element) {\n                            this.input.focus();\n                        }\n                    } else {\n                        this.showDropdown();\n                        this.containerOuter.focus();\n                    }\n                } else if (this._isSelectOneElement && target !== this.input.element && !this.dropdown.element.contains(target)) {\n                    this.hideDropdown();\n                }\n            } else {\n                const hasHighlightedItems = this._store.highlightedActiveItems.length > 0;\n                if (hasHighlightedItems) {\n                    this.unhighlightAll();\n                }\n                this.containerOuter.removeFocusState();\n                this.hideDropdown(true);\n            }\n        }\n        _onFocus({target}) {\n            const focusWasWithinContainer = this.containerOuter.element.contains(target);\n            if (!focusWasWithinContainer) {\n                return;\n            }\n            const focusActions = {\n                [constants.TEXT_TYPE]: () => {\n                    if (target === this.input.element) {\n                        this.containerOuter.addFocusState();\n                    }\n                },\n                [constants.SELECT_ONE_TYPE]: () => {\n                    this.containerOuter.addFocusState();\n                    if (target === this.input.element) {\n                        this.showDropdown(true);\n                    }\n                },\n                [constants.SELECT_MULTIPLE_TYPE]: () => {\n                    if (target === this.input.element) {\n                        this.showDropdown(true);\n                        this.containerOuter.addFocusState();\n                    }\n                }\n            };\n            focusActions[this.passedElement.element.type]();\n        }\n        _onBlur({target}) {\n            const blurWasWithinContainer = this.containerOuter.element.contains(target);\n            if (blurWasWithinContainer && !this._isScrollingOnIe) {\n                const {activeItems} = this._store;\n                const hasHighlightedItems = activeItems.some(item => item.highlighted);\n                const blurActions = {\n                    [constants.TEXT_TYPE]: () => {\n                        if (target === this.input.element) {\n                            this.containerOuter.removeFocusState();\n                            if (hasHighlightedItems) {\n                                this.unhighlightAll();\n                            }\n                            this.hideDropdown(true);\n                        }\n                    },\n                    [constants.SELECT_ONE_TYPE]: () => {\n                        this.containerOuter.removeFocusState();\n                        if (target === this.input.element || target === this.containerOuter.element && !this._canSearch) {\n                            this.hideDropdown(true);\n                        }\n                    },\n                    [constants.SELECT_MULTIPLE_TYPE]: () => {\n                        if (target === this.input.element) {\n                            this.containerOuter.removeFocusState();\n                            this.hideDropdown(true);\n                            if (hasHighlightedItems) {\n                                this.unhighlightAll();\n                            }\n                        }\n                    }\n                };\n                blurActions[this.passedElement.element.type]();\n            } else {\n                this._isScrollingOnIe = false;\n                this.input.element.focus();\n            }\n        }\n        _onFormReset() {\n            this._store.dispatch(misc.resetTo(this._initialState));\n        }\n        _highlightChoice(el = null) {\n            const choices = Array.from(this.dropdown.element.querySelectorAll('[data-choice-selectable]'));\n            if (!choices.length) {\n                return;\n            }\n            let passedEl = el;\n            const highlightedChoices = Array.from(this.dropdown.element.querySelectorAll(`.${ this.config.classNames.highlightedState }`));\n            highlightedChoices.forEach(choice => {\n                choice.classList.remove(this.config.classNames.highlightedState);\n                choice.setAttribute('aria-selected', 'false');\n            });\n            if (passedEl) {\n                this._highlightPosition = choices.indexOf(passedEl);\n            } else {\n                if (choices.length > this._highlightPosition) {\n                    passedEl = choices[this._highlightPosition];\n                } else {\n                    passedEl = choices[choices.length - 1];\n                }\n                if (!passedEl) {\n                    passedEl = choices[0];\n                }\n            }\n            passedEl.classList.add(this.config.classNames.highlightedState);\n            passedEl.setAttribute('aria-selected', 'true');\n            this.passedElement.triggerEvent(constants.EVENTS.highlightChoice, { el: passedEl });\n            if (this.dropdown.isActive) {\n                this.input.setActiveDescendant(passedEl.id);\n                this.containerOuter.setActiveDescendant(passedEl.id);\n            }\n        }\n        _addItem({value, label = null, choiceId = -1, groupId = -1, customProperties = null, placeholder = false, keyCode = null}) {\n            let passedValue = typeof value === 'string' ? value.trim() : value;\n            const passedKeyCode = keyCode;\n            const passedCustomProperties = customProperties;\n            const {items} = this._store;\n            const passedLabel = label || passedValue;\n            const passedOptionId = choiceId || -1;\n            const group = groupId >= 0 ? this._store.getGroupById(groupId) : null;\n            const id = items ? items.length + 1 : 1;\n            if (this.config.prependValue) {\n                passedValue = this.config.prependValue + passedValue.toString();\n            }\n            if (this.config.appendValue) {\n                passedValue += this.config.appendValue.toString();\n            }\n            this._store.dispatch(actionsItems.addItem({\n                value: passedValue,\n                label: passedLabel,\n                id,\n                choiceId: passedOptionId,\n                groupId,\n                customProperties,\n                placeholder,\n                keyCode: passedKeyCode\n            }));\n            if (this._isSelectOneElement) {\n                this.removeActiveItems(id);\n            }\n            this.passedElement.triggerEvent(constants.EVENTS.addItem, {\n                id,\n                value: passedValue,\n                label: passedLabel,\n                customProperties: passedCustomProperties,\n                groupValue: group && group.value ? group.value : undefined,\n                keyCode: passedKeyCode\n            });\n            return this;\n        }\n        _removeItem(item) {\n            if (!item || !h.isType('Object', item)) {\n                return this;\n            }\n            const {id, value, label, choiceId, groupId} = item;\n            const group = groupId >= 0 ? this._store.getGroupById(groupId) : null;\n            this._store.dispatch(actionsItems.removeItem(id, choiceId));\n            if (group && group.value) {\n                this.passedElement.triggerEvent(constants.EVENTS.removeItem, {\n                    id,\n                    value,\n                    label,\n                    groupValue: group.value\n                });\n            } else {\n                this.passedElement.triggerEvent(constants.EVENTS.removeItem, {\n                    id,\n                    value,\n                    label\n                });\n            }\n            return this;\n        }\n        _addChoice({value, label = null, isSelected = false, isDisabled = false, groupId = -1, customProperties = null, placeholder = false, keyCode = null}) {\n            if (typeof value === 'undefined' || value === null) {\n                return;\n            }\n            const {choices} = this._store;\n            const choiceLabel = label || value;\n            const choiceId = choices ? choices.length + 1 : 1;\n            const choiceElementId = `${ this._baseId }-${ this._idNames.itemChoice }-${ choiceId }`;\n            this._store.dispatch(actionsChoices.addChoice({\n                id: choiceId,\n                groupId,\n                elementId: choiceElementId,\n                value,\n                label: choiceLabel,\n                disabled: isDisabled,\n                customProperties,\n                placeholder,\n                keyCode\n            }));\n            if (isSelected) {\n                this._addItem({\n                    value,\n                    label: choiceLabel,\n                    choiceId,\n                    customProperties,\n                    placeholder,\n                    keyCode\n                });\n            }\n        }\n        _addGroup({group, id, valueKey = 'value', labelKey = 'label'}) {\n            const groupChoices = h.isType('Object', group) ? group.choices : Array.from(group.getElementsByTagName('OPTION'));\n            const groupId = id || Math.floor(new Date().valueOf() * Math.random());\n            const isDisabled = group.disabled ? group.disabled : false;\n            if (groupChoices) {\n                this._store.dispatch(groups.addGroup({\n                    value: group.label,\n                    id: groupId,\n                    active: true,\n                    disabled: isDisabled\n                }));\n                const addGroupChoices = choice => {\n                    const isOptDisabled = choice.disabled || choice.parentNode && choice.parentNode.disabled;\n                    this._addChoice({\n                        value: choice[valueKey],\n                        label: h.isType('Object', choice) ? choice[labelKey] : choice.innerHTML,\n                        isSelected: choice.selected,\n                        isDisabled: isOptDisabled,\n                        groupId,\n                        customProperties: choice.customProperties,\n                        placeholder: choice.placeholder\n                    });\n                };\n                groupChoices.forEach(addGroupChoices);\n            } else {\n                this._store.dispatch(groups.addGroup({\n                    value: group.label,\n                    id: group.id,\n                    active: false,\n                    disabled: group.disabled\n                }));\n            }\n        }\n        _getTemplate(template, ...args) {\n            if (!template) {\n                return null;\n            }\n            const {classNames} = this.config;\n            return this._templates[template].call(this, classNames, ...args);\n        }\n        _createTemplates() {\n            const {callbackOnCreateTemplates} = this.config;\n            let userTemplates = {};\n            if (callbackOnCreateTemplates && typeof callbackOnCreateTemplates === 'function') {\n                userTemplates = callbackOnCreateTemplates.call(this, h.strToEl);\n            }\n            this._templates = merge(TEMPLATES, userTemplates);\n        }\n        _createElements() {\n            this.containerOuter = new components.Container({\n                element: this._getTemplate('containerOuter', this._direction, this._isSelectElement, this._isSelectOneElement, this.config.searchEnabled, this.passedElement.element.type),\n                classNames: this.config.classNames,\n                type: this.passedElement.element.type,\n                position: this.config.position\n            });\n            this.containerInner = new components.Container({\n                element: this._getTemplate('containerInner'),\n                classNames: this.config.classNames,\n                type: this.passedElement.element.type,\n                position: this.config.position\n            });\n            this.input = new components.Input({\n                element: this._getTemplate('input', this._placeholderValue),\n                classNames: this.config.classNames,\n                type: this.passedElement.element.type,\n                preventPaste: !this.config.paste\n            });\n            this.choiceList = new components.List({ element: this._getTemplate('choiceList', this._isSelectOneElement) });\n            this.itemList = new components.List({ element: this._getTemplate('itemList', this._isSelectOneElement) });\n            this.dropdown = new components.Dropdown({\n                element: this._getTemplate('dropdown'),\n                classNames: this.config.classNames,\n                type: this.passedElement.element.type\n            });\n        }\n        _createStructure() {\n            this.passedElement.conceal();\n            this.containerInner.wrap(this.passedElement.element);\n            this.containerOuter.wrap(this.containerInner.element);\n            if (this._isSelectOneElement) {\n                this.input.placeholder = this.config.searchPlaceholderValue || '';\n            } else if (this._placeholderValue) {\n                this.input.placeholder = this._placeholderValue;\n                this.input.setWidth();\n            }\n            this.containerOuter.element.appendChild(this.containerInner.element);\n            this.containerOuter.element.appendChild(this.dropdown.element);\n            this.containerInner.element.appendChild(this.itemList.element);\n            if (!this._isTextElement) {\n                this.dropdown.element.appendChild(this.choiceList.element);\n            }\n            if (!this._isSelectOneElement) {\n                this.containerInner.element.appendChild(this.input.element);\n            } else if (this.config.searchEnabled) {\n                this.dropdown.element.insertBefore(this.input.element, this.dropdown.element.firstChild);\n            }\n            if (this._isSelectElement) {\n                this._highlightPosition = 0;\n                this._isSearching = false;\n                this._startLoading();\n                if (this._presetGroups.length) {\n                    this._addPredefinedGroups(this._presetGroups);\n                } else {\n                    this._addPredefinedChoices(this._presetChoices);\n                }\n                this._stopLoading();\n            }\n            if (this._isTextElement) {\n                this._addPredefinedItems(this._presetItems);\n            }\n        }\n        _addPredefinedGroups(groups) {\n            const placeholderChoice = this.passedElement.placeholderOption;\n            if (placeholderChoice && placeholderChoice.parentNode.tagName === 'SELECT') {\n                this._addChoice({\n                    value: placeholderChoice.value,\n                    label: placeholderChoice.innerHTML,\n                    isSelected: placeholderChoice.selected,\n                    isDisabled: placeholderChoice.disabled,\n                    placeholder: true\n                });\n            }\n            groups.forEach(group => this._addGroup({\n                group,\n                id: group.id || null\n            }));\n        }\n        _addPredefinedChoices(choices) {\n            if (this.config.shouldSort) {\n                choices.sort(this.config.sorter);\n            }\n            const hasSelectedChoice = choices.some(choice => choice.selected);\n            const firstEnabledChoiceIndex = choices.findIndex(choice => choice.disabled === undefined || !choice.disabled);\n            choices.forEach((choice, index) => {\n                const {value, label, customProperties, placeholder} = choice;\n                if (this._isSelectElement) {\n                    if (choice.choices) {\n                        this._addGroup({\n                            group: choice,\n                            id: choice.id || null\n                        });\n                    } else {\n                        const shouldPreselect = this._isSelectOneElement && !hasSelectedChoice && index === firstEnabledChoiceIndex;\n                        const isSelected = shouldPreselect ? true : choice.selected;\n                        const isDisabled = choice.disabled;\n                        this._addChoice({\n                            value,\n                            label,\n                            isSelected,\n                            isDisabled,\n                            customProperties,\n                            placeholder\n                        });\n                    }\n                } else {\n                    this._addChoice({\n                        value,\n                        label,\n                        isSelected: choice.selected,\n                        isDisabled: choice.disabled,\n                        customProperties,\n                        placeholder\n                    });\n                }\n            });\n        }\n        _addPredefinedItems(items) {\n            items.forEach(item => {\n                if (typeof item === 'object' && item.value) {\n                    this._addItem({\n                        value: item.value,\n                        label: item.label,\n                        choiceId: item.id,\n                        customProperties: item.customProperties,\n                        placeholder: item.placeholder\n                    });\n                }\n                if (typeof item === 'string') {\n                    this._addItem({ value: item });\n                }\n            });\n        }\n        _setChoiceOrItem(item) {\n            const itemType = h.getType(item).toLowerCase();\n            const handleType = {\n                object: () => {\n                    if (!item.value) {\n                        return;\n                    }\n                    if (!this._isTextElement) {\n                        this._addChoice({\n                            value: item.value,\n                            label: item.label,\n                            isSelected: true,\n                            isDisabled: false,\n                            customProperties: item.customProperties,\n                            placeholder: item.placeholder\n                        });\n                    } else {\n                        this._addItem({\n                            value: item.value,\n                            label: item.label,\n                            choiceId: item.id,\n                            customProperties: item.customProperties,\n                            placeholder: item.placeholder\n                        });\n                    }\n                },\n                string: () => {\n                    if (!this._isTextElement) {\n                        this._addChoice({\n                            value: item,\n                            label: item,\n                            isSelected: true,\n                            isDisabled: false\n                        });\n                    } else {\n                        this._addItem({ value: item });\n                    }\n                }\n            };\n            handleType[itemType]();\n        }\n        _findAndSelectChoiceByValue(val) {\n            const {choices} = this._store;\n            const foundChoice = choices.find(choice => this.config.valueComparer(choice.value, val));\n            if (foundChoice && !foundChoice.selected) {\n                this._addItem({\n                    value: foundChoice.value,\n                    label: foundChoice.label,\n                    choiceId: foundChoice.id,\n                    groupId: foundChoice.groupId,\n                    customProperties: foundChoice.customProperties,\n                    placeholder: foundChoice.placeholder,\n                    keyCode: foundChoice.keyCode\n                });\n            }\n        }\n        _generatePlaceholderValue() {\n            if (this._isSelectElement) {\n                const {placeholderOption} = this.passedElement;\n                return placeholderOption ? placeholderOption.text : false;\n            }\n            const {placeholder, placeholderValue} = this.config;\n            const {\n                element: {dataset}\n            } = this.passedElement;\n            if (placeholder) {\n                if (placeholderValue) {\n                    return placeholderValue;\n                }\n                if (dataset.placeholder) {\n                    return dataset.placeholder;\n                }\n            }\n            return false;\n        }\n    }\n    return Choices;\n});"]}
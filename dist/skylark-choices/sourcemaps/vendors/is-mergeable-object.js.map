{"version":3,"sources":["vendors/is-mergeable-object.js"],"names":["define","REACT_ELEMENT_TYPE","Symbol","for","value","isNonNullObject","stringValue","Object","prototype","toString","call","$$typeof","isReactElement","isSpecial"],"mappings":";;;;;;;AAAAA,UAAU,WAmBT,IACIC,EADiC,mBAAXC,QAAyBA,OAAOC,IAClBD,OAAOC,IAAI,iBAAmB,MAMtE,OAzBA,SAA2BC,GAC1B,OAID,SAAyBA,GACxB,QAASA,GAA0B,iBAAVA,EALlBC,CAAgBD,KAQxB,SAAmBA,GAClB,IAAIE,EAAcC,OAAOC,UAAUC,SAASC,KAAKN,GAEjD,MAAuB,oBAAhBE,GACa,kBAAhBA,GAQL,SAAwBF,GACvB,OAAOA,EAAMO,WAAaV,EARtBW,CAAeR,GAZdS,CAAUT","file":"../../vendors/is-mergeable-object.js","sourcesContent":["define([],function(){\r\n\tfunction isMergeableObject(value) {\r\n\t\treturn isNonNullObject(value)\r\n\t\t\t&& !isSpecial(value)\r\n\t}\r\n\r\n\tfunction isNonNullObject(value) {\r\n\t\treturn !!value && typeof value === 'object'\r\n\t}\r\n\r\n\tfunction isSpecial(value) {\r\n\t\tvar stringValue = Object.prototype.toString.call(value)\r\n\r\n\t\treturn stringValue === '[object RegExp]'\r\n\t\t\t|| stringValue === '[object Date]'\r\n\t\t\t|| isReactElement(value)\r\n\t}\r\n\r\n\t// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\r\n\tvar canUseSymbol = typeof Symbol === 'function' && Symbol.for\r\n\tvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7\r\n\r\n\tfunction isReactElement(value) {\r\n\t\treturn value.$$typeof === REACT_ELEMENT_TYPE\r\n\t}\r\n\r\n\treturn isMergeableObject;\r\n});"]}
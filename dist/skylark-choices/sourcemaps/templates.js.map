{"version":3,"sources":["templates.js"],"names":["define","[object Object]","containerOuter","dir","isSelectElement","isSelectOneElement","searchEnabled","passedElementType","div","Object","assign","document","createElement","className","dataset","type","tabIndex","setAttribute","containerInner","itemList","list","listSingle","listItems","placeholder","value","innerHTML","item","button","highlightedState","itemSelectable","id","label","customProperties","active","disabled","highlighted","isPlaceholder","removeItemButton","classList","add","remove","deletable","REMOVE_ITEM_TEXT","removeButton","appendChild","group","groupHeading","itemDisabled","itemChoice","selectedState","groupId","elementId","isDisabled","selected","isSelected","selectText","choice","choiceDisabled","choiceSelectable","input","inputCloned","placeholderValue","inp","autocomplete","autocapitalize","spellcheck","listDropdown","noResults","noChoices","classes","push","join","opt","Option"],"mappings":"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","file":"../templates.js","sourcesContent":["define(function () {\n    'use strict';\n    const TEMPLATES = {\n        containerOuter({containerOuter}, dir, isSelectElement, isSelectOneElement, searchEnabled, passedElementType) {\n            const div = Object.assign(document.createElement('div'), { className: containerOuter });\n            div.dataset.type = passedElementType;\n            if (dir) {\n                div.dir = dir;\n            }\n            if (isSelectOneElement) {\n                div.tabIndex = 0;\n            }\n            if (isSelectElement) {\n                div.setAttribute('role', searchEnabled ? 'combobox' : 'listbox');\n                if (searchEnabled) {\n                    div.setAttribute('aria-autocomplete', 'list');\n                }\n            }\n            div.setAttribute('aria-haspopup', 'true');\n            div.setAttribute('aria-expanded', 'false');\n            return div;\n        },\n        containerInner({containerInner}) {\n            return Object.assign(document.createElement('div'), { className: containerInner });\n        },\n        itemList({list, listSingle, listItems}, isSelectOneElement) {\n            return Object.assign(document.createElement('div'), { className: `${ list } ${ isSelectOneElement ? listSingle : listItems }` });\n        },\n        placeholder({placeholder}, value) {\n            return Object.assign(document.createElement('div'), {\n                className: placeholder,\n                innerHTML: value\n            });\n        },\n        item({item, button, highlightedState, itemSelectable, placeholder}, {\n            id,\n            value,\n            label,\n            customProperties,\n            active,\n            disabled,\n            highlighted,\n            placeholder: isPlaceholder\n        }, removeItemButton) {\n            const div = Object.assign(document.createElement('div'), {\n                className: item,\n                innerHTML: label\n            });\n            Object.assign(div.dataset, {\n                item: '',\n                id,\n                value,\n                customProperties\n            });\n            if (active) {\n                div.setAttribute('aria-selected', 'true');\n            }\n            if (disabled) {\n                div.setAttribute('aria-disabled', 'true');\n            }\n            if (isPlaceholder) {\n                div.classList.add(placeholder);\n            }\n            div.classList.add(highlighted ? highlightedState : itemSelectable);\n            if (removeItemButton) {\n                if (disabled) {\n                    div.classList.remove(itemSelectable);\n                }\n                div.dataset.deletable = '';\n                const REMOVE_ITEM_TEXT = 'Remove item';\n                const removeButton = Object.assign(document.createElement('button'), {\n                    type: 'button',\n                    className: button,\n                    innerHTML: REMOVE_ITEM_TEXT\n                });\n                removeButton.setAttribute('aria-label', `${ REMOVE_ITEM_TEXT }: '${ value }'`);\n                removeButton.dataset.button = '';\n                div.appendChild(removeButton);\n            }\n            return div;\n        },\n        choiceList({list}, isSelectOneElement) {\n            const div = Object.assign(document.createElement('div'), { className: list });\n            if (!isSelectOneElement) {\n                div.setAttribute('aria-multiselectable', 'true');\n            }\n            div.setAttribute('role', 'listbox');\n            return div;\n        },\n        choiceGroup({group, groupHeading, itemDisabled}, {id, value, disabled}) {\n            const div = Object.assign(document.createElement('div'), { className: `${ group } ${ disabled ? itemDisabled : '' }` });\n            div.setAttribute('role', 'group');\n            Object.assign(div.dataset, {\n                group: '',\n                id,\n                value\n            });\n            if (disabled) {\n                div.setAttribute('aria-disabled', 'true');\n            }\n            div.appendChild(Object.assign(document.createElement('div'), {\n                className: groupHeading,\n                innerHTML: value\n            }));\n            return div;\n        },\n        choice({item, itemChoice, itemSelectable, selectedState, itemDisabled, placeholder}, {\n            id,\n            value,\n            label,\n            groupId,\n            elementId,\n            disabled: isDisabled,\n            selected: isSelected,\n            placeholder: isPlaceholder\n        }, selectText) {\n            const div = Object.assign(document.createElement('div'), {\n                id: elementId,\n                innerHTML: label,\n                className: `${ item } ${ itemChoice }`\n            });\n            if (isSelected) {\n                div.classList.add(selectedState);\n            }\n            if (isPlaceholder) {\n                div.classList.add(placeholder);\n            }\n            div.setAttribute('role', groupId > 0 ? 'treeitem' : 'option');\n            Object.assign(div.dataset, {\n                choice: '',\n                id,\n                value,\n                selectText\n            });\n            if (isDisabled) {\n                div.classList.add(itemDisabled);\n                div.dataset.choiceDisabled = '';\n                div.setAttribute('aria-disabled', 'true');\n            } else {\n                div.classList.add(itemSelectable);\n                div.dataset.choiceSelectable = '';\n            }\n            return div;\n        },\n        input({input, inputCloned}, placeholderValue) {\n            const inp = Object.assign(document.createElement('input'), {\n                type: 'text',\n                className: `${ input } ${ inputCloned }`,\n                autocomplete: 'off',\n                autocapitalize: 'off',\n                spellcheck: false\n            });\n            inp.setAttribute('role', 'textbox');\n            inp.setAttribute('aria-autocomplete', 'list');\n            inp.setAttribute('aria-label', placeholderValue);\n            return inp;\n        },\n        dropdown({list, listDropdown}) {\n            const div = document.createElement('div');\n            div.classList.add(list, listDropdown);\n            div.setAttribute('aria-expanded', 'false');\n            return div;\n        },\n        notice({item, itemChoice, noResults, noChoices}, innerHTML, type = '') {\n            const classes = [\n                item,\n                itemChoice\n            ];\n            if (type === 'no-choices') {\n                classes.push(noChoices);\n            } else if (type === 'no-results') {\n                classes.push(noResults);\n            }\n            return Object.assign(document.createElement('div'), {\n                innerHTML,\n                className: classes.join(' ')\n            });\n        },\n        option({label, value, customProperties, active, disabled}) {\n            const opt = new Option(label, value, false, active);\n            if (customProperties) {\n                opt.dataset.customProperties = customProperties;\n            }\n            opt.disabled = disabled;\n            return opt;\n        }\n    };\n    return TEMPLATES;\n});"]}
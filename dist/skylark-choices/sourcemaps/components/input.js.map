{"version":3,"sources":["components/input.js"],"names":["define","utils","constants","[object Object]","element","type","classNames","preventPaste","this","isFocussed","document","activeElement","isDisabled","disabled","_onPaste","bind","_onInput","_onFocus","_onBlur","placeholder","value","sanitise","addEventListener","passive","removeEventListener","removeAttribute","setAttribute","focus","blur","setWidth","style","minWidth","length","width","activeDescendantID","SELECT_ONE_TYPE","event","preventDefault"],"mappings":";;;;;;;AAAAA,QACI,eACA,gBACD,SAAUC,EAAOC,GAChB,aACA,aACIC,aAAYC,QAACA,EAAOC,KAAEA,EAAIC,WAAEA,EAAUC,aAAEA,IACpCC,KAAKJ,QAAUA,EACfI,KAAKH,KAAOA,EACZG,KAAKF,WAAaA,EAClBE,KAAKD,aAAeA,EACpBC,KAAKC,WAAaD,KAAKJ,UAAYM,SAASC,cAC5CH,KAAKI,WAAaR,EAAQS,SAC1BL,KAAKM,SAAWN,KAAKM,SAASC,KAAKP,MACnCA,KAAKQ,SAAWR,KAAKQ,SAASD,KAAKP,MACnCA,KAAKS,SAAWT,KAAKS,SAASF,KAAKP,MACnCA,KAAKU,QAAUV,KAAKU,QAAQH,KAAKP,MAErCW,gBAAgBA,GACZX,KAAKJ,QAAQe,YAAcA,EAE/BC,YACI,OAAOnB,EAAMoB,SAASb,KAAKJ,QAAQgB,OAEvCA,UAAUA,GACNZ,KAAKJ,QAAQgB,MAAQA,EAEzBjB,oBACIK,KAAKJ,QAAQkB,iBAAiB,QAASd,KAAKM,UAC5CN,KAAKJ,QAAQkB,iBAAiB,QAASd,KAAKQ,UAAYO,SAAS,IACjEf,KAAKJ,QAAQkB,iBAAiB,QAASd,KAAKS,UAAYM,SAAS,IACjEf,KAAKJ,QAAQkB,iBAAiB,OAAQd,KAAKU,SAAWK,SAAS,IAEnEpB,uBACIK,KAAKJ,QAAQoB,oBAAoB,QAAShB,KAAKQ,UAAYO,SAAS,IACpEf,KAAKJ,QAAQoB,oBAAoB,QAAShB,KAAKM,UAC/CN,KAAKJ,QAAQoB,oBAAoB,QAAShB,KAAKS,UAAYM,SAAS,IACpEf,KAAKJ,QAAQoB,oBAAoB,OAAQhB,KAAKU,SAAWK,SAAS,IAEtEpB,SACIK,KAAKJ,QAAQqB,gBAAgB,YAC7BjB,KAAKI,YAAa,EAEtBT,UACIK,KAAKJ,QAAQsB,aAAa,WAAY,IACtClB,KAAKI,YAAa,EAEtBT,QACSK,KAAKC,YACND,KAAKJ,QAAQuB,QAGrBxB,OACQK,KAAKC,YACLD,KAAKJ,QAAQwB,OAGrBzB,MAAM0B,GAAW,GAOb,OANIrB,KAAKJ,QAAQgB,QACbZ,KAAKJ,QAAQgB,MAAQ,IAErBS,GACArB,KAAKqB,WAEFrB,KAEXL,WACI,MAAM2B,MAACA,EAAKV,MAAEA,EAAKD,YAAEA,GAAeX,KAAKJ,QACzC0B,EAAMC,YAAeZ,EAAYa,OAAS,MAC1CF,EAAMG,SAAYb,EAAMY,OAAS,MAErC7B,oBAAoB+B,GAChB1B,KAAKJ,QAAQsB,aAAa,wBAAyBQ,GAEvD/B,yBACIK,KAAKJ,QAAQqB,gBAAgB,yBAEjCtB,WACQK,KAAKH,OAASH,EAAUiC,iBACxB3B,KAAKqB,WAGb1B,SAASiC,GACD5B,KAAKD,cACL6B,EAAMC,iBAGdlC,WACIK,KAAKC,YAAa,EAEtBN,UACIK,KAAKC,YAAa","file":"../../components/input.js","sourcesContent":["define([\n    '../lib/utils',\n    '../constants'\n], function (utils, constants) {\n    'use strict';\n    return class Input {\n        constructor({element, type, classNames, preventPaste}) {\n            this.element = element;\n            this.type = type;\n            this.classNames = classNames;\n            this.preventPaste = preventPaste;\n            this.isFocussed = this.element === document.activeElement;\n            this.isDisabled = element.disabled;\n            this._onPaste = this._onPaste.bind(this);\n            this._onInput = this._onInput.bind(this);\n            this._onFocus = this._onFocus.bind(this);\n            this._onBlur = this._onBlur.bind(this);\n        }\n        set placeholder(placeholder) {\n            this.element.placeholder = placeholder;\n        }\n        get value() {\n            return utils.sanitise(this.element.value);\n        }\n        set value(value) {\n            this.element.value = value;\n        }\n        addEventListeners() {\n            this.element.addEventListener('paste', this._onPaste);\n            this.element.addEventListener('input', this._onInput, { passive: true });\n            this.element.addEventListener('focus', this._onFocus, { passive: true });\n            this.element.addEventListener('blur', this._onBlur, { passive: true });\n        }\n        removeEventListeners() {\n            this.element.removeEventListener('input', this._onInput, { passive: true });\n            this.element.removeEventListener('paste', this._onPaste);\n            this.element.removeEventListener('focus', this._onFocus, { passive: true });\n            this.element.removeEventListener('blur', this._onBlur, { passive: true });\n        }\n        enable() {\n            this.element.removeAttribute('disabled');\n            this.isDisabled = false;\n        }\n        disable() {\n            this.element.setAttribute('disabled', '');\n            this.isDisabled = true;\n        }\n        focus() {\n            if (!this.isFocussed) {\n                this.element.focus();\n            }\n        }\n        blur() {\n            if (this.isFocussed) {\n                this.element.blur();\n            }\n        }\n        clear(setWidth = true) {\n            if (this.element.value) {\n                this.element.value = '';\n            }\n            if (setWidth) {\n                this.setWidth();\n            }\n            return this;\n        }\n        setWidth() {\n            const {style, value, placeholder} = this.element;\n            style.minWidth = `${ placeholder.length + 1 }ch`;\n            style.width = `${ value.length + 1 }ch`;\n        }\n        setActiveDescendant(activeDescendantID) {\n            this.element.setAttribute('aria-activedescendant', activeDescendantID);\n        }\n        removeActiveDescendant() {\n            this.element.removeAttribute('aria-activedescendant');\n        }\n        _onInput() {\n            if (this.type !== constants.SELECT_ONE_TYPE) {\n                this.setWidth();\n            }\n        }\n        _onPaste(event) {\n            if (this.preventPaste) {\n                event.preventDefault();\n            }\n        }\n        _onFocus() {\n            this.isFocussed = true;\n        }\n        _onBlur() {\n            this.isFocussed = false;\n        }\n    };\n});"]}
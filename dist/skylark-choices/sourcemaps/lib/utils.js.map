{"version":3,"sources":["lib/utils.js"],"names":["define","getRandomNumber","min","max","Math","floor","random","generateChars","length","Array","from","toString","join","getType","obj","Object","prototype","call","slice","strToEl","tmpEl","document","createElement","str","cleanedInput","trim","innerHTML","firldChild","children","firstChild","removeChild","generateId","element","prefix","id","name","replace","isType","type","undefined","wrap","wrapper","nextSibling","parentNode","insertBefore","appendChild","getAdjacentEl","startEl","selector","direction","Element","prop","sibling","matches","isScrolledIntoView","parent","isVisible","scrollTop","offsetHeight","offsetTop","sanitise","value","sortByAlpha","label","value2","label2","localeCompare","sensitivity","ignorePunctuation","numeric","sortByScore","a","b","score","dispatchEvent","customArgs","event","CustomEvent","detail","bubbles","cancelable","existsInArray","array","key","some","item","cloneObject","JSON","parse","stringify","diff","aKeys","keys","sort","bKeys","filter","i","indexOf"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aACA,MAAMC,EAAkB,CAACC,EAAKC,IAAQC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,GACzEK,EAAgBC,GAAUC,MAAMC,MAAOF,OAAAA,GAAU,IAAMP,EAAgB,EAAG,IAAIU,SAAS,KAAKC,KAAK,IAOjGC,EAAUC,GAAOC,OAAOC,UAAUL,SAASM,KAAKH,GAAKI,MAAM,GAAI,GA0C/DC,EAAU,MACZ,MAAMC,EAAQC,SAASC,cAAc,OACrC,OAAOC,IACH,MAAMC,EAAeD,EAAIE,OACzBL,EAAMM,UAAYF,EAClB,MAAMG,EAAaP,EAAMQ,SAAS,GAClC,KAAOR,EAAMS,YACTT,EAAMU,YAAYV,EAAMS,YAE5B,OAAOF,IATC,GAyChB,OACI1B,gBAAiBA,EACjBM,cAAeA,EACfwB,WA5Fe,CAACC,EAASC,KACzB,IAAIC,EAAKF,EAAQE,IAAMF,EAAQG,SAAYH,EAAQG,QAAU5B,EAAc,MAASA,EAAc,GAGlG,OADA2B,KAASD,KADTC,EAAKA,EAAGE,QAAQ,kBAAmB,OA2FnCvB,QAASA,EACTwB,OAvFW,CAACC,EAAMxB,SAAgByB,IAARzB,GAA6B,OAARA,GAAgBD,EAAQC,KAASwB,EAwFhFE,KAvFS,CAACR,EAASS,EAAUpB,SAASC,cAAc,UAChDU,EAAQU,YACRV,EAAQW,WAAWC,aAAaH,EAAST,EAAQU,aAEjDV,EAAQW,WAAWE,YAAYJ,GAE5BA,EAAQI,YAAYb,IAkF3Bc,cAhFkB,CAACC,EAASC,EAAUC,EAAY,KAClD,KAAMF,aAAmBG,UAAgC,iBAAbF,EACxC,OAEJ,MAAMG,KAAWF,EAAY,EAAI,OAAS,2BAC1C,IAAIG,EAAUL,EAAQI,GACtB,KAAOC,GAAS,CACZ,GAAIA,EAAQC,QAAQL,GAChB,OAAOI,EAEXA,EAAUA,EAAQD,GAEtB,OAAOC,GAqEPE,mBAnEuB,CAACtB,EAASuB,EAAQN,EAAY,KACrD,IAAKjB,EACD,OAAO,EAEX,IAAIwB,EAMJ,OAJIA,EADAP,EAAY,EACAM,EAAOE,UAAYF,EAAOG,cAAgB1B,EAAQ2B,UAAY3B,EAAQ0B,aAEtE1B,EAAQ2B,WAAaJ,EAAOE,WA4D5CG,SAxDaC,GACQ,iBAAVA,EACAA,EAEJA,EAAMzB,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,UAqD9FjB,QAASA,EACT2C,YAxCgB,EAAED,MAAAA,EAAOE,MAAAA,EAAQF,IACjCA,MAAOG,EACPD,MAAOE,EAASD,KACdD,EAAMG,cAAcD,MACtBE,YAAa,OACbC,mBAAmB,EACnBC,SAAS,IAmCTC,YAjCgB,CAACC,EAAGC,IAAMD,EAAEE,MAAQD,EAAEC,MAkCtCC,cAjCkB,CAAC1C,EAASM,EAAMqC,EAAa,QAC/C,MAAMC,EAAQ,IAAIC,YAAYvC,GAC1BwC,OAAQH,EACRI,SAAS,EACTC,YAAY,IAEhB,OAAOhD,EAAQ0C,cAAcE,IA4B7BK,cA1BkB,CAACC,EAAOrB,EAAOsB,EAAM,UAAYD,EAAME,KAAKC,GACzC,iBAAVxB,EACAwB,EAAKF,KAAStB,EAAMpC,OAExB4D,EAAKF,KAAStB,GAuBrByB,YArBgBxE,GAAOyE,KAAKC,MAAMD,KAAKE,UAAU3E,IAsBjD4E,KArBS,CAACnB,EAAGC,KACb,MAAMmB,EAAQ5E,OAAO6E,KAAKrB,GAAGsB,OACvBC,EAAQ/E,OAAO6E,KAAKpB,GAAGqB,OAC7B,OAAOF,EAAMI,OAAOC,GAAKF,EAAMG,QAAQD,GAAK","file":"../../lib/utils.js","sourcesContent":["define(function () {\n    'use strict';\n    const getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min) + min);\n    const generateChars = length => Array.from({ length }, () => getRandomNumber(0, 36).toString(36)).join('');\n    const generateId = (element, prefix) => {\n        let id = element.id || element.name && `${ element.name }-${ generateChars(2) }` || generateChars(4);\n        id = id.replace(/(:|\\.|\\[|\\]|,)/g, '');\n        id = `${ prefix }-${ id }`;\n        return id;\n    };\n    const getType = obj => Object.prototype.toString.call(obj).slice(8, -1);\n    const isType = (type, obj) => obj !== undefined && obj !== null && getType(obj) === type;\n    const wrap = (element, wrapper = document.createElement('div')) => {\n        if (element.nextSibling) {\n            element.parentNode.insertBefore(wrapper, element.nextSibling);\n        } else {\n            element.parentNode.appendChild(wrapper);\n        }\n        return wrapper.appendChild(element);\n    };\n    const getAdjacentEl = (startEl, selector, direction = 1) => {\n        if (!(startEl instanceof Element) || typeof selector !== 'string') {\n            return undefined;\n        }\n        const prop = `${ direction > 0 ? 'next' : 'previous' }ElementSibling`;\n        let sibling = startEl[prop];\n        while (sibling) {\n            if (sibling.matches(selector)) {\n                return sibling;\n            }\n            sibling = sibling[prop];\n        }\n        return sibling;\n    };\n    const isScrolledIntoView = (element, parent, direction = 1) => {\n        if (!element) {\n            return false;\n        }\n        let isVisible;\n        if (direction > 0) {\n            isVisible = parent.scrollTop + parent.offsetHeight >= element.offsetTop + element.offsetHeight;\n        } else {\n            isVisible = element.offsetTop >= parent.scrollTop;\n        }\n        return isVisible;\n    };\n    const sanitise = value => {\n        if (typeof value !== 'string') {\n            return value;\n        }\n        return value.replace(/&/g, '&amp;').replace(/>/g, '&rt;').replace(/</g, '&lt;').replace(/\"/g, '&quot;');\n    };\n    const strToEl = (() => {\n        const tmpEl = document.createElement('div');\n        return str => {\n            const cleanedInput = str.trim();\n            tmpEl.innerHTML = cleanedInput;\n            const firldChild = tmpEl.children[0];\n            while (tmpEl.firstChild) {\n                tmpEl.removeChild(tmpEl.firstChild);\n            }\n            return firldChild;\n        };\n    })();\n    const sortByAlpha = ({value, label = value}, {\n        value: value2,\n        label: label2 = value2\n    }) => label.localeCompare(label2, [], {\n        sensitivity: 'base',\n        ignorePunctuation: true,\n        numeric: true\n    });\n    const sortByScore = (a, b) => a.score - b.score;\n    const dispatchEvent = (element, type, customArgs = null) => {\n        const event = new CustomEvent(type, {\n            detail: customArgs,\n            bubbles: true,\n            cancelable: true\n        });\n        return element.dispatchEvent(event);\n    };\n    const existsInArray = (array, value, key = 'value') => array.some(item => {\n        if (typeof value === 'string') {\n            return item[key] === value.trim();\n        }\n        return item[key] === value;\n    });\n    const cloneObject = obj => JSON.parse(JSON.stringify(obj));\n    const diff = (a, b) => {\n        const aKeys = Object.keys(a).sort();\n        const bKeys = Object.keys(b).sort();\n        return aKeys.filter(i => bKeys.indexOf(i) < 0);\n    };\n    return {\n        getRandomNumber: getRandomNumber,\n        generateChars: generateChars,\n        generateId: generateId,\n        getType: getType,\n        isType: isType,\n        wrap: wrap,\n        getAdjacentEl: getAdjacentEl,\n        isScrolledIntoView: isScrolledIntoView,\n        sanitise: sanitise,\n        strToEl: strToEl,\n        sortByAlpha: sortByAlpha,\n        sortByScore: sortByScore,\n        dispatchEvent: dispatchEvent,\n        existsInArray: existsInArray,\n        cloneObject: cloneObject,\n        diff: diff\n    };\n});"]}